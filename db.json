{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/Chic/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/Chic/source/css/base.styl","path":"css/base.styl","modified":1,"renderable":1},{"_id":"themes/Chic/source/css/custom.styl","path":"css/custom.styl","modified":1,"renderable":1},{"_id":"themes/Chic/source/css/font.styl","path":"css/font.styl","modified":1,"renderable":1},{"_id":"themes/Chic/source/css/layout.styl","path":"css/layout.styl","modified":1,"renderable":1},{"_id":"themes/Chic/source/css/media.styl","path":"css/media.styl","modified":1,"renderable":1},{"_id":"themes/Chic/source/css/normalize.styl","path":"css/normalize.styl","modified":1,"renderable":1},{"_id":"themes/Chic/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/Chic/source/css/variable.styl","path":"css/variable.styl","modified":1,"renderable":1},{"_id":"themes/Chic/source/image/avatar.jpeg","path":"image/avatar.jpeg","modified":1,"renderable":1},{"_id":"themes/Chic/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/Chic/source/js/tocbot.min.js","path":"js/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/Chic/source/js/mathjax2.7.5.js","path":"js/mathjax2.7.5.js","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/demo.css","path":"fonts/iconfont/demo.css","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.css","path":"fonts/iconfont/iconfont.css","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.eot","path":"fonts/iconfont/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.js","path":"fonts/iconfont/iconfont.js","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.svg","path":"fonts/iconfont/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.ttf","path":"fonts/iconfont/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/demo_index.html","path":"fonts/iconfont/demo_index.html","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.woff2","path":"fonts/iconfont/iconfont.woff2","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.woff","path":"fonts/iconfont/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/lanting/lanting.woff2","path":"fonts/lanting/lanting.woff2","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/lanting/lanting.woff","path":"fonts/lanting/lanting.woff","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/lanting/lanting.eot","path":"fonts/lanting/lanting.eot","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/lanting/lanting.TTF","path":"fonts/lanting/lanting.TTF","modified":1,"renderable":1},{"_id":"themes/Chic/source/fonts/lanting/lanting.otf","path":"fonts/lanting/lanting.otf","modified":1,"renderable":1}],"Cache":[{"_id":"themes/Chic/ChangeLogs.md","hash":"0e8cf146f1d08661c53b63d6c0aa02f850ef25d7","modified":1568699509118},{"_id":"themes/Chic/_config.yml","hash":"56bcb3e630d76d06283bc36fe7b5a942985f7e64","modified":1570770496387},{"_id":"themes/Chic/package.json","hash":"8b4072879307eed0e74ae35390825c5e03b9229c","modified":1568699509118},{"_id":"themes/Chic/README-CN.md","hash":"29e5f35c64e1e6c0fe7bddb38f712afd3e4d8626","modified":1568699509118},{"_id":"themes/Chic/README.md","hash":"b38dd5321876df94ca7ab70665bc521bacc1fe8c","modified":1568699509118},{"_id":"themes/Chic/LICENSE.md","hash":"9911bdafa287bd65a822f84cc12012980bd10247","modified":1568699509118},{"_id":"themes/Chic/scripts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568699509118},{"_id":"source/_posts/Linux-Kernel-Config.md","hash":"db6e596d4e5b3be50f7b1899c016fa9263ee0919","modified":1570770300217},{"_id":"source/_posts/Linux-kernel-compile.md","hash":"2a38fe1f31dacc4c92e756d08d1ea2eee9852588","modified":1570770283277},{"_id":"source/_posts/Ubuntu-Install.md","hash":"18ec54a3abb88f855c957279c5ac3baa659ea330","modified":1571363005186},{"_id":"source/_posts/mac-androidstudio.md","hash":"fef4256030e93feb4da0eb2e25957f1b29b6f7ce","modified":1570770251789},{"_id":"source/_posts/Ubuntu-NVMe.md","hash":"a70e560fbd27c6b9f6879d37f9469e35294bd94d","modified":1570770316101},{"_id":"source/_posts/ubuntu-remarkable.md","hash":"206a64b1bd205cb041c2d174c1fc662d4190111c","modified":1570770220169},{"_id":"source/_posts/union-struct.md","hash":"e46d8c7a43ce12b2ca9156bb0b72f8b8c8e2e092","modified":1570770425628},{"_id":"source/about/index.md","hash":"02842a4b026206270223a89ab82bdea299fb12f7","modified":1570770670550},{"_id":"source/category/index.md","hash":"bc5fc46cae3d3412d264e58be706513746a8f751","modified":1568709464442},{"_id":"source/tag/index.md","hash":"5faafc1cade86b3cb590e444d713e222ce78cd46","modified":1568709489642},{"_id":"themes/Chic/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1568699509118},{"_id":"themes/Chic/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1568699509118},{"_id":"themes/Chic/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1568699509118},{"_id":"themes/Chic/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1568699509118},{"_id":"themes/Chic/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1568699509118},{"_id":"themes/Chic/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1568699509118},{"_id":"themes/Chic/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1568699509118},{"_id":"themes/Chic/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1568699509118},{"_id":"themes/Chic/languages/zh-CN-bak.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1568707856118},{"_id":"themes/Chic/languages/zh-Hans.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1568699509118},{"_id":"themes/Chic/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1568699509118},{"_id":"themes/Chic/layout/archive.ejs","hash":"48cdf67b628eb6a1c24d484ed252f5b0e3f06ddf","modified":1568699509118},{"_id":"themes/Chic/layout/category.ejs","hash":"b6a8ffcaa9c98c58a05bb1d6f15e5b6eca3523d8","modified":1568709644218},{"_id":"themes/Chic/layout/layout.ejs","hash":"f874320edabdefc204f9e17d119a16d16f26c363","modified":1568699509118},{"_id":"themes/Chic/layout/index.ejs","hash":"b3344720176ad12dc88745cc5b31d497356ca4fa","modified":1568699509118},{"_id":"themes/Chic/layout/page.ejs","hash":"3179c527694a789760742e1923c7ac5f94b4997c","modified":1568699509118},{"_id":"themes/Chic/layout/post.ejs","hash":"a23f83d6c559ce88588472267468a54488d50e8e","modified":1568699509118},{"_id":"themes/Chic/layout/tag.ejs","hash":"1d0daa3823d08c69e40c6d68809e10c9c2308979","modified":1568709710182},{"_id":"themes/Chic/source/favicon.ico","hash":"e7fb1dba8c2650084aeeeb653420b8af2732efc1","modified":1568698574702},{"_id":"source/_posts/Linux-Kernel-Config/grepKernel.png","hash":"8da5af09d3ad527d9ea75b8a046573a911880fd9","modified":1568970742000},{"_id":"source/_posts/Linux-Kernel-Config/uname.png","hash":"063a3409e493f232b7e596dfb41e2a4d5d580f4b","modified":1568970784000},{"_id":"source/_posts/Linux-kernel-compile/grub.png","hash":"4f7dc8b03cf968aa3a9f614e7f99e5331346036e","modified":1568957733073},{"_id":"source/_posts/Linux-kernel-compile/kernelversion.png","hash":"81ab0bd492b654c24b9cc6bd94543e7bbdd2e9d1","modified":1568957610748},{"_id":"source/_posts/Linux-kernel-compile/libmodules.png","hash":"dff5e823e8c6b582058de5b3ab96843a36ea49c7","modified":1568954971073},{"_id":"source/_posts/Ubuntu-Install/RestartSystem.png","hash":"3aebab27371007cd374765209a3a1842209e0bf2","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/SetRam.png","hash":"5874ef629598394ec1c91b9d62f046bcf640f420","modified":1570773258000},{"_id":"source/_posts/ubuntu-remarkable/depend.png","hash":"ddd341ea1c56314c333831389d38c0756fde49ae","modified":1568698574730},{"_id":"source/_posts/ubuntu-remarkable/download.png","hash":"cb895307c8174931ec17a7bedf322aded037970a","modified":1568698574730},{"_id":"source/_posts/ubuntu-remarkable/install.png","hash":"a10f4747f90d1dc7887c1ca30700c513fdaf8b6d","modified":1568698574730},{"_id":"themes/Chic/layout/_page/archive.ejs","hash":"464549286c92ea0d6cb057c6936e0f1a5d1c1dd2","modified":1568699509118},{"_id":"themes/Chic/layout/_page/category.ejs","hash":"e63734fd3ddc57f522f886ccc74f53725318ec4a","modified":1568718843927},{"_id":"themes/Chic/layout/_page/page.ejs","hash":"1d875d59cf4d6b681cc8cf755f19b5355e5d1144","modified":1568699509118},{"_id":"themes/Chic/layout/_page/post.ejs","hash":"6eb9cd3ee904e99ff78509298ae31a29fdbf49cf","modified":1568699509118},{"_id":"themes/Chic/layout/_page/profile.ejs","hash":"c6d3cf2ef90e5d0fd580e7cff1db47c28fb36037","modified":1568699509118},{"_id":"themes/Chic/layout/_page/tag.ejs","hash":"fffa0d0f81c60ad124e92397d2ea1893c5ce270c","modified":1568718724943},{"_id":"themes/Chic/layout/_partial/footer.ejs","hash":"9e56510a314fd019661c48bac409758e31636bef","modified":1568705375410},{"_id":"themes/Chic/layout/_partial/head.ejs","hash":"6ea29cae0cb06b0659c4e6914cc5956ac119bef5","modified":1568699509118},{"_id":"themes/Chic/layout/_partial/header.ejs","hash":"7c734d8356f2c2355a25e307bc55c99652990442","modified":1569502931525},{"_id":"themes/Chic/layout/_partial/paginator.ejs","hash":"ab59d5db77f2aa64dfe03656e72fd49702c62e23","modified":1568699509118},{"_id":"themes/Chic/layout/_partial/toc.ejs","hash":"1bd4d5dcd3d62e5ae165b9b2625c50a7d7b9265e","modified":1568719192107},{"_id":"themes/Chic/layout/_plugins/mathjax.ejs","hash":"53f088fe44d51c4d9fb61aeac4c23b3cfcc19762","modified":1568699509118},{"_id":"themes/Chic/source/css/base.styl","hash":"7ea2db2c139a719bb7d3f3c5e182dd0e0d59e098","modified":1568699509118},{"_id":"themes/Chic/source/css/custom.styl","hash":"bf8dee1a094b104d87a53b43f6daa7ba43b67574","modified":1568699509118},{"_id":"themes/Chic/source/css/font.styl","hash":"a7a3cbf98142891e2e13143e5687447f1c23ac21","modified":1568699509118},{"_id":"themes/Chic/source/css/layout.styl","hash":"9942d05bb2c55cf035d4bf9af325e1e81766a510","modified":1568699509118},{"_id":"themes/Chic/source/css/media.styl","hash":"f96c0dbb9653667906a6dc271f637543ac5c7212","modified":1568699509118},{"_id":"themes/Chic/source/css/normalize.styl","hash":"b3337320133b7a336db7033aa6bbe94b054c0b21","modified":1568699509118},{"_id":"themes/Chic/source/css/style.styl","hash":"3574bf933c2ff46ea673be18a35a0d5395538420","modified":1568699509118},{"_id":"themes/Chic/source/css/variable.styl","hash":"906faa95457eba70118a0705e13b8f43409e502f","modified":1568699509118},{"_id":"themes/Chic/source/image/avatar.jpeg","hash":"bd6b1665dba041cab046aeca81ec0127d8e730e0","modified":1568698574702},{"_id":"themes/Chic/source/js/script.js","hash":"ff1430d0ab46cf7797a5500a557081d2f0ae9dd1","modified":1569503001872},{"_id":"source/_posts/Linux-Kernel-Config/editgrub.png","hash":"cbe0d4210d762c0038b41a92dbf0ed2956c825fa","modified":1568970916000},{"_id":"source/_posts/Linux-Kernel-Config/menuentry.png","hash":"78532c7a5c48feed8ee65c7628255ec180e1e607","modified":1568970824000},{"_id":"source/_posts/Linux-kernel-compile/boot.png","hash":"b8b72c573ce856da41bfd65a1a4ab098c9466cda","modified":1568957079664},{"_id":"themes/Chic/source/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1568699509174},{"_id":"source/_posts/Linux-kernel-compile/menuconfig.png","hash":"377d94f7e661110ab17461a4d915e8f57d048919","modified":1568946795489},{"_id":"source/_posts/Ubuntu-Install/ContinueInstall.png","hash":"17f9359c003cb9eefa6b42f981e0c04ff7c99b9c","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/EraseContine.png","hash":"27baa7ef2ed079dec782f6ceef99451984d0fa28","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/EraseInstall.png","hash":"06c42dd07c448ace76baeb41289944f4571ac43f","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/InstallUbuntu.png","hash":"8048a316111557ebb3f69a02999f6f6d04ac08b7","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/KeyBoard.png","hash":"ff2d7d47a4bcb1139879c1002b6b582e8b7e2747","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/NameStorage.png","hash":"7aaf65abd33486ba889572c23fb337e554aae553","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/NameSystem.png","hash":"0c38c80f3ea4f14aadd234ce56ddc17abc98d083","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/PersonConfig.png","hash":"6660349553f66f3ec0300b85b55d08eb748f91f8","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/SetRom.png","hash":"77854eea4705bf85b68abab9076b99007ced9956","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/SetRomType.png","hash":"5843fdadc131ebc96f772535ac066e9b64dea7c9","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/SetStorage.png","hash":"4ceec65ccd732b458dc99910eae07101418926a3","modified":1570773258000},{"_id":"source/_posts/ubuntu-remarkable/update.png","hash":"82144d270f875a37e51f60f298d4009caf5a4a6a","modified":1568698574730},{"_id":"themes/Chic/source/js/mathjax2.7.5.js","hash":"7ba18c783d543cfb4b45a0118ccb73d3f68cd46e","modified":1568699509174},{"_id":"source/_posts/Linux-kernel-compile/downlink.png","hash":"884860fba4279a0de32eb843f3a7abae6ff663dd","modified":1568946064373},{"_id":"source/_posts/Ubuntu-Install/CreateVirtualBox.png","hash":"3f47b9263d41759e0d9eb8a67a16824ee378ce51","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/InstallAddition.png","hash":"eb36e1d0fcd2ea5e848d0f2238accb89ab28152b","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/SettingSystem.png","hash":"a02a29fa012b8194fb3873055814f1e2c61fa6a2","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/StartInstall.png","hash":"dfd28bdd5285d3e7c87b4d632daa19e38b64f6e5","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/TimeZone.png","hash":"f053fb6ea186bf88e1867e7fa38619c6f8d8f42d","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/downloadVirtual.png","hash":"ffeb7b536e714160a74092635b47ebc90bf10de7","modified":1570773258000},{"_id":"themes/Chic/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/brown-paper.styl","hash":"329b85ae9130a5587a6fb1c6f80396f9cca5ddc1","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/gruvbox-dark.styl","hash":"76b744c14fd5600bea64731c05df97c2df75523f","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/highlightjs.styl","hash":"65b5981dc3c57cedd1cb668c0e377230987e08d1","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1568699509118},{"_id":"themes/Chic/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/pojoaque.styl","hash":"2601b4285803a7cea5ccded8d624ca95f80e3d88","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/school-book.styl","hash":"beabbbcc7930f8de19159381a01c0ba41dc2291f","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1568699509118},{"_id":"themes/Chic/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1568699509118},{"_id":"themes/Chic/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1568699509118},{"_id":"themes/Chic/source/css/_lib/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/archive.styl","hash":"71ea842f068b29b4418dd09450db09d27dcf0947","modified":1568699509118},{"_id":"themes/Chic/source/css/_lib/looper.css","hash":"863144dc9af7c1e181670515bc85eaf768f4e287","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/page.styl","hash":"34e33b52d2e046aa2f5494e81ff4ac2d5ca78058","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/category.styl","hash":"cead361269616b7a6ddec3090d9fa34c3c6ac722","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/tag.styl","hash":"55b220cc58011876fb3a470cd1fde8ed87c93079","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/profile.styl","hash":"5ef6d5a06132f26b7aa01b2fbf4bbfb8ee862b7b","modified":1568699509118},{"_id":"themes/Chic/source/css/_partial/header.styl","hash":"be70b4ab3bcc977f1055664899742804c716929d","modified":1568699509118},{"_id":"themes/Chic/source/css/_partial/paginator.styl","hash":"b4f4a5180c4cbc70d186792b8a1fd0f5855bd86a","modified":1568699509118},{"_id":"themes/Chic/source/fonts/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1568699509118},{"_id":"themes/Chic/source/css/_partial/footer.styl","hash":"4f58e607eaa59cda3b5a9fdb3404ffb75c4d1a03","modified":1568699509118},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.css","hash":"700558f705bea4a8395576869fccdc4ebfb98ef0","modified":1568699509118},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.eot","hash":"02553b14fe863421e481c059a92bf035093eb6d2","modified":1568699509118},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.js","hash":"310b47f6e467764656aba0612ec45996b4f6b1ea","modified":1568699509118},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.svg","hash":"5bed32f57c17baa0eb749c459fea32354bf9392f","modified":1568699509126},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.ttf","hash":"00246e6f6f99f7ec1f8e224aa81380976d35528a","modified":1568699509126},{"_id":"themes/Chic/source/fonts/iconfont/demo_index.html","hash":"17421a586883ca9af111fdd7c240c07efb821c37","modified":1568699509118},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.woff2","hash":"5551fe1064a35ad20d3b7a74d2e91ac759785ed8","modified":1568699509126},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.woff","hash":"83da577619512d7ea2b0e4611d90f2973297edce","modified":1568699509126},{"_id":"source/_posts/Ubuntu-Install/Installing.png","hash":"13c19321c2c0e68bc8f840d11eeabe1c19664808","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/RunAddition.png","hash":"cd255e1a2363093a75fc2905e8b42da754c9507f","modified":1570773258000},{"_id":"source/_posts/ubuntu-remarkable/remarkable.png","hash":"25d2d272fae31352e8b2101bc9e613eed245d463","modified":1568769979627},{"_id":"source/_posts/Ubuntu-Install/AdditionComplete.png","hash":"c503d38265349b5870a0ba50e43ce129182ff7c9","modified":1570773258000},{"_id":"source/_posts/Ubuntu-Install/InstallComplete.png","hash":"bcda83888a51525c0019c3ee337e0f1e8dae2011","modified":1570773258000},{"_id":"themes/Chic/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/_post/post_content.styl","hash":"00f1dc087605fa09a3eff17cfe73d69488190df0","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/_post/post_copyright.styl","hash":"64fd9f07ed45f035057d46740af0db70218714aa","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/_post/post_header.styl","hash":"d37b032bc5edca92c84bf62070a28fa40939df55","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/_post/post_code.styl","hash":"a69dbb838665a36607284df45b28de9850f92ddf","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/_post/post_nav.styl","hash":"03accaba13c995cbe65a05a88549ff74e992eb3f","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/_post/post_tags.styl","hash":"2ff93677aa4d81da83c659b4dd4e3cb482d9ce7d","modified":1568699509118},{"_id":"themes/Chic/source/css/_page/_post/post_toc.styl","hash":"15e1ec7af93f41184f986aba21991a79923b0a0e","modified":1568699509118},{"_id":"source/_posts/Ubuntu-Install/IgnoreUpdate.png","hash":"c586222519a1c31b7a7a8bfee4b963db9b96a4d3","modified":1570773258000},{"_id":"source/_posts/mac-androidstudio/gradlepath.png","hash":"6e8bf27a3ca509ddd89fbda4c4bea86a7b43e3f0","modified":1568698574730},{"_id":"source/_posts/mac-androidstudio/install.png","hash":"1ddfeb6c7d071284c1fba883936fe01be5478cf3","modified":1568698574710},{"_id":"source/_posts/Ubuntu-Install/SettingDetails.png","hash":"5f1112c7250ca325a3b114baa5d12c7eab2ed8d7","modified":1570773258000},{"_id":"source/_posts/mac-androidstudio/androidstudio.png","hash":"d1e262f31f7c32d85b64bbde1024d2936432885f","modified":1568698574730},{"_id":"source/_posts/mac-androidstudio/gradlefile.png","hash":"a2701e66f6c21121af2613e740ea33d6e3c3fe02","modified":1568698574722},{"_id":"source/_posts/mac-androidstudio/download.png","hash":"23bdb8ac28939f092e6f2bf3f333c7ecad710f88","modified":1568698574710},{"_id":"themes/Chic/source/fonts/lanting/lanting.woff2","hash":"5f325fcd2726a5b44e08b7004a5219e14847cbfa","modified":1568699509174},{"_id":"themes/Chic/source/fonts/lanting/lanting.woff","hash":"642ad1f17d27d4b1010d1a0571d1b44cbc823d9d","modified":1568699509174},{"_id":"themes/Chic/source/fonts/lanting/lanting.eot","hash":"3e184614f037939a6f98d607da3ed7dffb350e65","modified":1568699509146},{"_id":"themes/Chic/source/fonts/lanting/lanting.TTF","hash":"97e9a4538cceef4b17d54c7dc589524905d1b685","modified":1568699509134},{"_id":"themes/Chic/source/fonts/lanting/lanting.otf","hash":"4e184da596772d3ef6e5763cdee3e46a1ce2f2dd","modified":1568699509174}],"Category":[{"name":"Linux","_id":"ck2l8mid7000417al1llre1bh"},{"name":"Ubuntu","_id":"ck2l8midp000f17alto6o3syp"},{"name":"Android","_id":"ck2l8midt000k17al1ikmkit4"},{"name":"C/C++","_id":"ck2l8mie3000u17alow7yluzx"}],"Data":[],"Page":[{"title":"关于","layout":"about","date":"2019-09-17T06:03:32.000Z","_content":"\n>### 我十分爱喝辣白菜汤\n\n\n\n","source":"about/index.md","raw":"---\ntitle:  关于\nlayout: about\ndate: 2019-09-17 14:03:32\n---\n\n>### 我十分爱喝辣白菜汤\n\n\n\n","updated":"2019-10-11T05:11:10.550Z","path":"about/index.html","comments":1,"_id":"ck2l8mid3000117alirb32sog","content":"<blockquote>\n<h3 id=\"我十分爱喝辣白菜汤\"><a href=\"#我十分爱喝辣白菜汤\" class=\"headerlink\" title=\"我十分爱喝辣白菜汤\"></a>我十分爱喝辣白菜汤</h3></blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<h3 id=\"我十分爱喝辣白菜汤\"><a href=\"#我十分爱喝辣白菜汤\" class=\"headerlink\" title=\"我十分爱喝辣白菜汤\"></a>我十分爱喝辣白菜汤</h3></blockquote>\n"},{"title":"分类","layout":"category","date":"2019-09-17T06:00:34.000Z","_content":"","source":"category/index.md","raw":"---\ntitle: 分类\nlayout: category\ndate: 2019-09-17 14:00:34\n---\n","updated":"2019-09-17T08:37:44.442Z","path":"category/index.html","comments":1,"_id":"ck2l8mid6000317alps71ycp0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","layout":"tag","date":"2019-09-17T06:00:24.000Z","_content":"","source":"tag/index.md","raw":"---\ntitle: 标签\nlayout: tag\ndate: 2019-09-17 14:00:24\n---\n","updated":"2019-09-17T08:38:09.642Z","path":"tag/index.html","comments":1,"_id":"ck2l8mida000717alsfa2dco2","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Ubuntu内核的安装、删除与切换","date":"2019-08-03T00:04:56.000Z","author":"孙宏伟","_content":"\n## 查看当前内核\n&ensp; &ensp;&ensp; &ensp; 可以通过以下命令查看当前安装了几个linux内核：\n```bash\n$dpkg --get-selections | grep linux-image\n```\n![grepKernel](grepKernel.png) \n\n&ensp; &ensp;&ensp; &ensp; 当有多个内核时，使用如下命令查看当前使用的是哪个版本：\n```bash\n$uname -a\n```\n![uname](uname.png) \n\n## 配置启动顺序\n&ensp; &ensp;&ensp; &ensp; 如果当前使用的内核为自己所需要的，无需做任何改动，如果电脑中有需要的内核，但是当前使用的不是，可以使用如下命令进行修改，首先查询需求内核的顺序：\n```bash\n$grep menuentry /boot/grub/grub.cfg \n```\n![menuentry](menuentry.png) \n&ensp; &ensp;&ensp; &ensp; 在输出的结果中找到这样的行：\n\n<em style=\"color:orange\">menuentry 'Ubuntu, with Linux 4.8.0-36-generic' --class ubuntu.........</em>\n\n\n&ensp; &ensp;&ensp; &ensp; 从0开始计算，找到自己所需要内核的顺序，假设在第4行，则序列为3(从0开始)，然后修改这个文件：\n```bash\n$sudo vim /etc/default/grub \n```\n&ensp; &ensp;&ensp; &ensp; 找到<em style=\"color:red\">“GRUB_DEFAULT=0”</em>这行，修改为<em style=\"color:red\">“GRUB_DEFAULT=“1>3”</em>\n或 <em style=\"color:red\"> “GRUB_DEFAULT=”Ubuntu, with Linux 4.8.0-36-generic”(不推荐)</em>，然后保存：\n\n\n&ensp; &ensp;&ensp; &ensp; 执行如下命令更新grub，然后重启，用uname查看当前的内核版本是否已经变更：\n```bash\n$sudo update-grub\n```\n&ensp; &ensp;&ensp; &ensp; 上述步骤对应的是系统启动是的GNU Grub的顺序，如果上述操作没生效，可以重启时按住Esc键，然后查看Ubuntu Advance的位置，进入后再查看所需要的内核的序号，然后更改按照下述方式更改：\n<em style=\"color:red\">GRUB_DEFAULT=“2>3”</em>\n(从上向下数，从0开始，假设Ubuntu Advance位置为2,所需内核位置为3)\n\n## 安装指定内核\n&ensp; &ensp;&ensp; &ensp; 如果通过dpkg --get-selections 命令输出的内容没有所需要的内核，则需要新装，假设需要的内核版本为4.8.0-36，使用如下命令进行安装：\n```bash\n$sudo apt-get install linux-image-4.8.0-36-generic \n$sudo apt-get install linux-image-extra-4.8.0-36-generic\n```\n&ensp; &ensp;&ensp; &ensp; 内核成功安装后，再执行上述的命令讲自己的内核修改为默认启动即可\n\n&ensp; &ensp;&ensp; &ensp; 当然也可以前往[LinuxKernel](https://mirrors.edge.kernel.org/pub/linux/kernel/) 下载合适的内核版本，本地编译安装，此处不做过多描述。\n\n&ensp; &ensp;&ensp; &ensp; 如果由于安装时的设置，导致系统内核过多，占用/boot的空间，因此需要删除不必要的内核，执行以下命令删除即可    \n```bash\n$sudo apt-get purge linux-image-4.8.0-36-generic \n```\n&ensp; &ensp;&ensp; &ensp; 使用remove也可以，但是不会删除配置文件，purge会删除相关的配置文件，避免留下冗余的内容，当尝试新内核时，由于新内核存在很多不稳定性，因此建议保留1～2个稳定的内核，以免意外。","source":"_posts/Linux-Kernel-Config.md","raw":"---\ntitle:        Ubuntu内核的安装、删除与切换\ndate:       2019-08-03 08:04:56\nauthor:     孙宏伟\ncategories: Linux\ntags:\n - Linux\n---\n\n## 查看当前内核\n&ensp; &ensp;&ensp; &ensp; 可以通过以下命令查看当前安装了几个linux内核：\n```bash\n$dpkg --get-selections | grep linux-image\n```\n![grepKernel](grepKernel.png) \n\n&ensp; &ensp;&ensp; &ensp; 当有多个内核时，使用如下命令查看当前使用的是哪个版本：\n```bash\n$uname -a\n```\n![uname](uname.png) \n\n## 配置启动顺序\n&ensp; &ensp;&ensp; &ensp; 如果当前使用的内核为自己所需要的，无需做任何改动，如果电脑中有需要的内核，但是当前使用的不是，可以使用如下命令进行修改，首先查询需求内核的顺序：\n```bash\n$grep menuentry /boot/grub/grub.cfg \n```\n![menuentry](menuentry.png) \n&ensp; &ensp;&ensp; &ensp; 在输出的结果中找到这样的行：\n\n<em style=\"color:orange\">menuentry 'Ubuntu, with Linux 4.8.0-36-generic' --class ubuntu.........</em>\n\n\n&ensp; &ensp;&ensp; &ensp; 从0开始计算，找到自己所需要内核的顺序，假设在第4行，则序列为3(从0开始)，然后修改这个文件：\n```bash\n$sudo vim /etc/default/grub \n```\n&ensp; &ensp;&ensp; &ensp; 找到<em style=\"color:red\">“GRUB_DEFAULT=0”</em>这行，修改为<em style=\"color:red\">“GRUB_DEFAULT=“1>3”</em>\n或 <em style=\"color:red\"> “GRUB_DEFAULT=”Ubuntu, with Linux 4.8.0-36-generic”(不推荐)</em>，然后保存：\n\n\n&ensp; &ensp;&ensp; &ensp; 执行如下命令更新grub，然后重启，用uname查看当前的内核版本是否已经变更：\n```bash\n$sudo update-grub\n```\n&ensp; &ensp;&ensp; &ensp; 上述步骤对应的是系统启动是的GNU Grub的顺序，如果上述操作没生效，可以重启时按住Esc键，然后查看Ubuntu Advance的位置，进入后再查看所需要的内核的序号，然后更改按照下述方式更改：\n<em style=\"color:red\">GRUB_DEFAULT=“2>3”</em>\n(从上向下数，从0开始，假设Ubuntu Advance位置为2,所需内核位置为3)\n\n## 安装指定内核\n&ensp; &ensp;&ensp; &ensp; 如果通过dpkg --get-selections 命令输出的内容没有所需要的内核，则需要新装，假设需要的内核版本为4.8.0-36，使用如下命令进行安装：\n```bash\n$sudo apt-get install linux-image-4.8.0-36-generic \n$sudo apt-get install linux-image-extra-4.8.0-36-generic\n```\n&ensp; &ensp;&ensp; &ensp; 内核成功安装后，再执行上述的命令讲自己的内核修改为默认启动即可\n\n&ensp; &ensp;&ensp; &ensp; 当然也可以前往[LinuxKernel](https://mirrors.edge.kernel.org/pub/linux/kernel/) 下载合适的内核版本，本地编译安装，此处不做过多描述。\n\n&ensp; &ensp;&ensp; &ensp; 如果由于安装时的设置，导致系统内核过多，占用/boot的空间，因此需要删除不必要的内核，执行以下命令删除即可    \n```bash\n$sudo apt-get purge linux-image-4.8.0-36-generic \n```\n&ensp; &ensp;&ensp; &ensp; 使用remove也可以，但是不会删除配置文件，purge会删除相关的配置文件，避免留下冗余的内容，当尝试新内核时，由于新内核存在很多不稳定性，因此建议保留1～2个稳定的内核，以免意外。","slug":"Linux-Kernel-Config","published":1,"updated":"2019-10-11T05:05:00.217Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2l8micx000017alaray8p8c","content":"<h2 id=\"查看当前内核\"><a href=\"#查看当前内核\" class=\"headerlink\" title=\"查看当前内核\"></a>查看当前内核</h2><p>&ensp; &ensp;&ensp; &ensp; 可以通过以下命令查看当前安装了几个linux内核：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$dpkg</span> --get-selections | grep linux-image</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/08/03/Linux-Kernel-Config/grepKernel.png\" alt=\"grepKernel\"> </p>\n<p>&ensp; &ensp;&ensp; &ensp; 当有多个内核时，使用如下命令查看当前使用的是哪个版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span> -a</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/08/03/Linux-Kernel-Config/uname.png\" alt=\"uname\"> </p>\n<h2 id=\"配置启动顺序\"><a href=\"#配置启动顺序\" class=\"headerlink\" title=\"配置启动顺序\"></a>配置启动顺序</h2><p>&ensp; &ensp;&ensp; &ensp; 如果当前使用的内核为自己所需要的，无需做任何改动，如果电脑中有需要的内核，但是当前使用的不是，可以使用如下命令进行修改，首先查询需求内核的顺序：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$grep</span> menuentry /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/08/03/Linux-Kernel-Config/menuentry.png\" alt=\"menuentry\"><br>&ensp; &ensp;&ensp; &ensp; 在输出的结果中找到这样的行：</p>\n<p><em style=\"color:orange\">menuentry ‘Ubuntu, with Linux 4.8.0-36-generic’ –class ubuntu………</em></p>\n<p>&ensp; &ensp;&ensp; &ensp; 从0开始计算，找到自己所需要内核的顺序，假设在第4行，则序列为3(从0开始)，然后修改这个文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> vim /etc/default/grub</span><br></pre></td></tr></table></figure>\n\n<p>&ensp; &ensp;&ensp; &ensp; 找到<em style=\"color:red\">“GRUB_DEFAULT=0”</em>这行，修改为<em style=\"color:red\">“GRUB_DEFAULT=“1&gt;3”</em><br>或 <em style=\"color:red\"> “GRUB_DEFAULT=”Ubuntu, with Linux 4.8.0-36-generic”(不推荐)</em>，然后保存：</p>\n<p>&ensp; &ensp;&ensp; &ensp; 执行如下命令更新grub，然后重启，用uname查看当前的内核版本是否已经变更：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> update-grub</span><br></pre></td></tr></table></figure>\n\n<p>&ensp; &ensp;&ensp; &ensp; 上述步骤对应的是系统启动是的GNU Grub的顺序，如果上述操作没生效，可以重启时按住Esc键，然后查看Ubuntu Advance的位置，进入后再查看所需要的内核的序号，然后更改按照下述方式更改：<br><em style=\"color:red\">GRUB_DEFAULT=“2&gt;3”</em><br>(从上向下数，从0开始，假设Ubuntu Advance位置为2,所需内核位置为3)</p>\n<h2 id=\"安装指定内核\"><a href=\"#安装指定内核\" class=\"headerlink\" title=\"安装指定内核\"></a>安装指定内核</h2><p>&ensp; &ensp;&ensp; &ensp; 如果通过dpkg –get-selections 命令输出的内容没有所需要的内核，则需要新装，假设需要的内核版本为4.8.0-36，使用如下命令进行安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> apt-get install linux-image-4.8.0-36-generic </span><br><span class=\"line\"><span class=\"variable\">$sudo</span> apt-get install linux-image-extra-4.8.0-36-generic</span><br></pre></td></tr></table></figure>\n\n<p>&ensp; &ensp;&ensp; &ensp; 内核成功安装后，再执行上述的命令讲自己的内核修改为默认启动即可</p>\n<p>&ensp; &ensp;&ensp; &ensp; 当然也可以前往<a href=\"https://mirrors.edge.kernel.org/pub/linux/kernel/\" target=\"_blank\" rel=\"noopener\">LinuxKernel</a> 下载合适的内核版本，本地编译安装，此处不做过多描述。</p>\n<p>&ensp; &ensp;&ensp; &ensp; 如果由于安装时的设置，导致系统内核过多，占用/boot的空间，因此需要删除不必要的内核，执行以下命令删除即可    </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> apt-get purge linux-image-4.8.0-36-generic</span><br></pre></td></tr></table></figure>\n\n<p>&ensp; &ensp;&ensp; &ensp; 使用remove也可以，但是不会删除配置文件，purge会删除相关的配置文件，避免留下冗余的内容，当尝试新内核时，由于新内核存在很多不稳定性，因此建议保留1～2个稳定的内核，以免意外。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"查看当前内核\"><a href=\"#查看当前内核\" class=\"headerlink\" title=\"查看当前内核\"></a>查看当前内核</h2><p>&ensp; &ensp;&ensp; &ensp; 可以通过以下命令查看当前安装了几个linux内核：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$dpkg</span> --get-selections | grep linux-image</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/08/03/Linux-Kernel-Config/grepKernel.png\" alt=\"grepKernel\"> </p>\n<p>&ensp; &ensp;&ensp; &ensp; 当有多个内核时，使用如下命令查看当前使用的是哪个版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$uname</span> -a</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/08/03/Linux-Kernel-Config/uname.png\" alt=\"uname\"> </p>\n<h2 id=\"配置启动顺序\"><a href=\"#配置启动顺序\" class=\"headerlink\" title=\"配置启动顺序\"></a>配置启动顺序</h2><p>&ensp; &ensp;&ensp; &ensp; 如果当前使用的内核为自己所需要的，无需做任何改动，如果电脑中有需要的内核，但是当前使用的不是，可以使用如下命令进行修改，首先查询需求内核的顺序：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$grep</span> menuentry /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/08/03/Linux-Kernel-Config/menuentry.png\" alt=\"menuentry\"><br>&ensp; &ensp;&ensp; &ensp; 在输出的结果中找到这样的行：</p>\n<p><em style=\"color:orange\">menuentry ‘Ubuntu, with Linux 4.8.0-36-generic’ –class ubuntu………</em></p>\n<p>&ensp; &ensp;&ensp; &ensp; 从0开始计算，找到自己所需要内核的顺序，假设在第4行，则序列为3(从0开始)，然后修改这个文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> vim /etc/default/grub</span><br></pre></td></tr></table></figure>\n\n<p>&ensp; &ensp;&ensp; &ensp; 找到<em style=\"color:red\">“GRUB_DEFAULT=0”</em>这行，修改为<em style=\"color:red\">“GRUB_DEFAULT=“1&gt;3”</em><br>或 <em style=\"color:red\"> “GRUB_DEFAULT=”Ubuntu, with Linux 4.8.0-36-generic”(不推荐)</em>，然后保存：</p>\n<p>&ensp; &ensp;&ensp; &ensp; 执行如下命令更新grub，然后重启，用uname查看当前的内核版本是否已经变更：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> update-grub</span><br></pre></td></tr></table></figure>\n\n<p>&ensp; &ensp;&ensp; &ensp; 上述步骤对应的是系统启动是的GNU Grub的顺序，如果上述操作没生效，可以重启时按住Esc键，然后查看Ubuntu Advance的位置，进入后再查看所需要的内核的序号，然后更改按照下述方式更改：<br><em style=\"color:red\">GRUB_DEFAULT=“2&gt;3”</em><br>(从上向下数，从0开始，假设Ubuntu Advance位置为2,所需内核位置为3)</p>\n<h2 id=\"安装指定内核\"><a href=\"#安装指定内核\" class=\"headerlink\" title=\"安装指定内核\"></a>安装指定内核</h2><p>&ensp; &ensp;&ensp; &ensp; 如果通过dpkg –get-selections 命令输出的内容没有所需要的内核，则需要新装，假设需要的内核版本为4.8.0-36，使用如下命令进行安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> apt-get install linux-image-4.8.0-36-generic </span><br><span class=\"line\"><span class=\"variable\">$sudo</span> apt-get install linux-image-extra-4.8.0-36-generic</span><br></pre></td></tr></table></figure>\n\n<p>&ensp; &ensp;&ensp; &ensp; 内核成功安装后，再执行上述的命令讲自己的内核修改为默认启动即可</p>\n<p>&ensp; &ensp;&ensp; &ensp; 当然也可以前往<a href=\"https://mirrors.edge.kernel.org/pub/linux/kernel/\" target=\"_blank\" rel=\"noopener\">LinuxKernel</a> 下载合适的内核版本，本地编译安装，此处不做过多描述。</p>\n<p>&ensp; &ensp;&ensp; &ensp; 如果由于安装时的设置，导致系统内核过多，占用/boot的空间，因此需要删除不必要的内核，执行以下命令删除即可    </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> apt-get purge linux-image-4.8.0-36-generic</span><br></pre></td></tr></table></figure>\n\n<p>&ensp; &ensp;&ensp; &ensp; 使用remove也可以，但是不会删除配置文件，purge会删除相关的配置文件，避免留下冗余的内容，当尝试新内核时，由于新内核存在很多不稳定性，因此建议保留1～2个稳定的内核，以免意外。</p>\n"},{"title":"Linux内核的编译方法","date":"2019-07-10T02:14:48.000Z","author":"孙宏伟","summary":"Linux compile guide","_content":"\n## Linux 版本号命名规则\n\n&ensp;&ensp;&ensp;&ensp;这里先对linux的内核版本号做个解释，以“4.8.0-36-generic”为例：\n\n<table>\n   <tr>\n      <td>4</td>\n      <td>8</td>\n      <td>0</td>\n      <td>36</td>\n      <td colspan=\"2\">generic</td>   \n   </tr>\n   <tr>\n      <td>主版本号</td>\n      <td>奇数为开发版</td>\n      <td>修订版本号</td>\n      <td>第几次微调</td>\n      <td>generic</td>\n      <td>通用</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td>偶数为稳定版</td>\n      <td></td>\n      <td></td>\n      <td>preemption</td>\n      <td>抢占式</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>preemption</td>\n      <td>低延时</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>rt/realtime</td>\n      <td>实时</td>\n   </tr>\n</table>\n\n**对于该用哪种类型,官网上的解释如下:**\n\n-  If you do not require low latency for your system then please use the -generic kernel.\n-     If you need a low latency system (e.g. for recording audio) then please use the -preempt kernel as a fist choice. This reduces latency but doesn't sacrifice power saving features. It is available only for 64 bit systems (also called amd64).\n-     If the -preempt kernel does not provide enough low latency for your needs (or you have an 32 bit system) then you should try the -lowlatency kernel.\n-     If the -lowlatency kernel isn't enough then you should try the -rt kernel\n-     If the -rt kernel isn't enough stable for you then you should try the -realtime kernel\n\n## Linux 内核编译\n\n&ensp;&ensp;&ensp;&ensp; 前往[Linux内核](https://mirrors.edge.kernel.org/pub/linux/kernel/) 选择所需要的版本:\n![DownLoadLink](downlink.png)\n\n&ensp;&ensp;&ensp;&ensp; 下载到本地执行下述命令解压,进入到解压后的文件夹:\n``` bash\n$tar -xvf linux-3.18.129.tar.xz linux-33.18.129\n$cd linux-33.18.129\n```\n\n&ensp;&ensp;&ensp;&ensp;执行内核配置时需要依赖到curses的库，用于以图形化选择配置方案,执行如下命令安装:\n```bash\n$sudo apt-get install libncurses5-dev\n```\n\n&ensp;&ensp;&ensp;&ensp;对内核进行裁剪，执行如下命令进入到图形化配置界面，直接选择需要的项目进行更改，具体内容请查阅内核配置的详细文章,此处不做过多介绍:\n```bash\n$make menuconfig\n```\n\n&ensp;&ensp;&ensp;&ensp;根据自己的需求进行相应的配置，完成后会保存为.config到该目录，当然也可以拷贝已有的文件，不用再进行配置。\n![MenuConfig](menuconfig.png)\n\n\n&ensp;&ensp;&ensp;&ensp;执行编译命令，开始编译，如果是多cpu，可以后接 -j(n)，这样编译能快些，不然只会一个一个的编译:\n```bash\n$make -j4\n```\n&ensp;&ensp;&ensp;&ensp;编译完成后，执行如下命令安装内核modules:\n```bash\n$sudo make modules_install\n```\n&ensp;&ensp;&ensp;&ensp;执行完毕后可以到/lib/modules下查看是否新增了对应的文件夹:\n![libmodule](libmodules.png)\n&ensp;&ensp;&ensp;&ensp;然后再执行如下命令安装内核:\n```bash\n$sudo make install \n```\n&ensp;&ensp;&ensp;&ensp;执行完毕后到/boot文件夹下查看是否新增相关文件:\n![libmodule](boot.png)\n\n## 使用新内核\n&ensp;&ensp;&ensp;&ensp;安装完成后，重启机器。在重启的过程中，使用TAB+shift组合键或者ESC进入grub引导界面，不同的机器进入的方式可能会略有差异,以Ubuntu为例,启动时进入到grub,可以看到已经多出了本次编译的内核:\n![grub](grub.png)\n&ensp;&ensp;&ensp;&ensp;进入系统后再查看内核版本,已经变更为新编译的3.18.129:\n![kernelversion](kernelversion.png)","source":"_posts/Linux-kernel-compile.md","raw":"---\ntitle: Linux内核的编译方法\ndate: 2019-07-10 10:14:48\nauthor:     孙宏伟\nsummary:    Linux compile guide\ncategories: Linux\ntags:\n - Linux \n---\n\n## Linux 版本号命名规则\n\n&ensp;&ensp;&ensp;&ensp;这里先对linux的内核版本号做个解释，以“4.8.0-36-generic”为例：\n\n<table>\n   <tr>\n      <td>4</td>\n      <td>8</td>\n      <td>0</td>\n      <td>36</td>\n      <td colspan=\"2\">generic</td>   \n   </tr>\n   <tr>\n      <td>主版本号</td>\n      <td>奇数为开发版</td>\n      <td>修订版本号</td>\n      <td>第几次微调</td>\n      <td>generic</td>\n      <td>通用</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td>偶数为稳定版</td>\n      <td></td>\n      <td></td>\n      <td>preemption</td>\n      <td>抢占式</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>preemption</td>\n      <td>低延时</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>rt/realtime</td>\n      <td>实时</td>\n   </tr>\n</table>\n\n**对于该用哪种类型,官网上的解释如下:**\n\n-  If you do not require low latency for your system then please use the -generic kernel.\n-     If you need a low latency system (e.g. for recording audio) then please use the -preempt kernel as a fist choice. This reduces latency but doesn't sacrifice power saving features. It is available only for 64 bit systems (also called amd64).\n-     If the -preempt kernel does not provide enough low latency for your needs (or you have an 32 bit system) then you should try the -lowlatency kernel.\n-     If the -lowlatency kernel isn't enough then you should try the -rt kernel\n-     If the -rt kernel isn't enough stable for you then you should try the -realtime kernel\n\n## Linux 内核编译\n\n&ensp;&ensp;&ensp;&ensp; 前往[Linux内核](https://mirrors.edge.kernel.org/pub/linux/kernel/) 选择所需要的版本:\n![DownLoadLink](downlink.png)\n\n&ensp;&ensp;&ensp;&ensp; 下载到本地执行下述命令解压,进入到解压后的文件夹:\n``` bash\n$tar -xvf linux-3.18.129.tar.xz linux-33.18.129\n$cd linux-33.18.129\n```\n\n&ensp;&ensp;&ensp;&ensp;执行内核配置时需要依赖到curses的库，用于以图形化选择配置方案,执行如下命令安装:\n```bash\n$sudo apt-get install libncurses5-dev\n```\n\n&ensp;&ensp;&ensp;&ensp;对内核进行裁剪，执行如下命令进入到图形化配置界面，直接选择需要的项目进行更改，具体内容请查阅内核配置的详细文章,此处不做过多介绍:\n```bash\n$make menuconfig\n```\n\n&ensp;&ensp;&ensp;&ensp;根据自己的需求进行相应的配置，完成后会保存为.config到该目录，当然也可以拷贝已有的文件，不用再进行配置。\n![MenuConfig](menuconfig.png)\n\n\n&ensp;&ensp;&ensp;&ensp;执行编译命令，开始编译，如果是多cpu，可以后接 -j(n)，这样编译能快些，不然只会一个一个的编译:\n```bash\n$make -j4\n```\n&ensp;&ensp;&ensp;&ensp;编译完成后，执行如下命令安装内核modules:\n```bash\n$sudo make modules_install\n```\n&ensp;&ensp;&ensp;&ensp;执行完毕后可以到/lib/modules下查看是否新增了对应的文件夹:\n![libmodule](libmodules.png)\n&ensp;&ensp;&ensp;&ensp;然后再执行如下命令安装内核:\n```bash\n$sudo make install \n```\n&ensp;&ensp;&ensp;&ensp;执行完毕后到/boot文件夹下查看是否新增相关文件:\n![libmodule](boot.png)\n\n## 使用新内核\n&ensp;&ensp;&ensp;&ensp;安装完成后，重启机器。在重启的过程中，使用TAB+shift组合键或者ESC进入grub引导界面，不同的机器进入的方式可能会略有差异,以Ubuntu为例,启动时进入到grub,可以看到已经多出了本次编译的内核:\n![grub](grub.png)\n&ensp;&ensp;&ensp;&ensp;进入系统后再查看内核版本,已经变更为新编译的3.18.129:\n![kernelversion](kernelversion.png)","slug":"Linux-kernel-compile","published":1,"updated":"2019-10-11T05:04:43.277Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2l8mid4000217alq7b7ka4t","content":"<h2 id=\"Linux-版本号命名规则\"><a href=\"#Linux-版本号命名规则\" class=\"headerlink\" title=\"Linux 版本号命名规则\"></a>Linux 版本号命名规则</h2><p>&ensp;&ensp;&ensp;&ensp;这里先对linux的内核版本号做个解释，以“4.8.0-36-generic”为例：</p>\n<table>\n   <tr>\n      <td>4</td>\n      <td>8</td>\n      <td>0</td>\n      <td>36</td>\n      <td colspan=\"2\">generic</td>   \n   </tr>\n   <tr>\n      <td>主版本号</td>\n      <td>奇数为开发版</td>\n      <td>修订版本号</td>\n      <td>第几次微调</td>\n      <td>generic</td>\n      <td>通用</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td>偶数为稳定版</td>\n      <td></td>\n      <td></td>\n      <td>preemption</td>\n      <td>抢占式</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>preemption</td>\n      <td>低延时</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>rt/realtime</td>\n      <td>实时</td>\n   </tr>\n</table>\n\n<p><strong>对于该用哪种类型,官网上的解释如下:</strong></p>\n<ul>\n<li>If you do not require low latency for your system then please use the -generic kernel.</li>\n<li>If you need a low latency system (e.g. for recording audio) then please use the -preempt kernel as a fist choice. This reduces latency but doesn’t sacrifice power saving features. It is available only for 64 bit systems (also called amd64).</li>\n<li>If the -preempt kernel does not provide enough low latency for your needs (or you have an 32 bit system) then you should try the -lowlatency kernel.</li>\n<li>If the -lowlatency kernel isn’t enough then you should try the -rt kernel</li>\n<li>If the -rt kernel isn’t enough stable for you then you should try the -realtime kernel</li>\n</ul>\n<h2 id=\"Linux-内核编译\"><a href=\"#Linux-内核编译\" class=\"headerlink\" title=\"Linux 内核编译\"></a>Linux 内核编译</h2><p>&ensp;&ensp;&ensp;&ensp; 前往<a href=\"https://mirrors.edge.kernel.org/pub/linux/kernel/\" target=\"_blank\" rel=\"noopener\">Linux内核</a> 选择所需要的版本:<br><img src=\"/2019/07/10/Linux-kernel-compile/downlink.png\" alt=\"DownLoadLink\"></p>\n<p>&ensp;&ensp;&ensp;&ensp; 下载到本地执行下述命令解压,进入到解压后的文件夹:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$tar</span> -xvf linux-3.18.129.tar.xz linux-33.18.129</span><br><span class=\"line\"><span class=\"variable\">$cd</span> linux-33.18.129</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;执行内核配置时需要依赖到curses的库，用于以图形化选择配置方案,执行如下命令安装:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> apt-get install libncurses5-dev</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;对内核进行裁剪，执行如下命令进入到图形化配置界面，直接选择需要的项目进行更改，具体内容请查阅内核配置的详细文章,此处不做过多介绍:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$make</span> menuconfig</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;根据自己的需求进行相应的配置，完成后会保存为.config到该目录，当然也可以拷贝已有的文件，不用再进行配置。<br><img src=\"/2019/07/10/Linux-kernel-compile/menuconfig.png\" alt=\"MenuConfig\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;执行编译命令，开始编译，如果是多cpu，可以后接 -j(n)，这样编译能快些，不然只会一个一个的编译:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$make</span> -j4</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;编译完成后，执行如下命令安装内核modules:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> make modules_install</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;执行完毕后可以到/lib/modules下查看是否新增了对应的文件夹:<br><img src=\"/2019/07/10/Linux-kernel-compile/libmodules.png\" alt=\"libmodule\"><br>&ensp;&ensp;&ensp;&ensp;然后再执行如下命令安装内核:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> make install</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;执行完毕后到/boot文件夹下查看是否新增相关文件:<br><img src=\"/2019/07/10/Linux-kernel-compile/boot.png\" alt=\"libmodule\"></p>\n<h2 id=\"使用新内核\"><a href=\"#使用新内核\" class=\"headerlink\" title=\"使用新内核\"></a>使用新内核</h2><p>&ensp;&ensp;&ensp;&ensp;安装完成后，重启机器。在重启的过程中，使用TAB+shift组合键或者ESC进入grub引导界面，不同的机器进入的方式可能会略有差异,以Ubuntu为例,启动时进入到grub,可以看到已经多出了本次编译的内核:<br><img src=\"/2019/07/10/Linux-kernel-compile/grub.png\" alt=\"grub\"><br>&ensp;&ensp;&ensp;&ensp;进入系统后再查看内核版本,已经变更为新编译的3.18.129:<br><img src=\"/2019/07/10/Linux-kernel-compile/kernelversion.png\" alt=\"kernelversion\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Linux-版本号命名规则\"><a href=\"#Linux-版本号命名规则\" class=\"headerlink\" title=\"Linux 版本号命名规则\"></a>Linux 版本号命名规则</h2><p>&ensp;&ensp;&ensp;&ensp;这里先对linux的内核版本号做个解释，以“4.8.0-36-generic”为例：</p>\n<table>\n   <tr>\n      <td>4</td>\n      <td>8</td>\n      <td>0</td>\n      <td>36</td>\n      <td colspan=\"2\">generic</td>   \n   </tr>\n   <tr>\n      <td>主版本号</td>\n      <td>奇数为开发版</td>\n      <td>修订版本号</td>\n      <td>第几次微调</td>\n      <td>generic</td>\n      <td>通用</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td>偶数为稳定版</td>\n      <td></td>\n      <td></td>\n      <td>preemption</td>\n      <td>抢占式</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>preemption</td>\n      <td>低延时</td>\n   </tr>\n   <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>rt/realtime</td>\n      <td>实时</td>\n   </tr>\n</table>\n\n<p><strong>对于该用哪种类型,官网上的解释如下:</strong></p>\n<ul>\n<li>If you do not require low latency for your system then please use the -generic kernel.</li>\n<li>If you need a low latency system (e.g. for recording audio) then please use the -preempt kernel as a fist choice. This reduces latency but doesn’t sacrifice power saving features. It is available only for 64 bit systems (also called amd64).</li>\n<li>If the -preempt kernel does not provide enough low latency for your needs (or you have an 32 bit system) then you should try the -lowlatency kernel.</li>\n<li>If the -lowlatency kernel isn’t enough then you should try the -rt kernel</li>\n<li>If the -rt kernel isn’t enough stable for you then you should try the -realtime kernel</li>\n</ul>\n<h2 id=\"Linux-内核编译\"><a href=\"#Linux-内核编译\" class=\"headerlink\" title=\"Linux 内核编译\"></a>Linux 内核编译</h2><p>&ensp;&ensp;&ensp;&ensp; 前往<a href=\"https://mirrors.edge.kernel.org/pub/linux/kernel/\" target=\"_blank\" rel=\"noopener\">Linux内核</a> 选择所需要的版本:<br><img src=\"/2019/07/10/Linux-kernel-compile/downlink.png\" alt=\"DownLoadLink\"></p>\n<p>&ensp;&ensp;&ensp;&ensp; 下载到本地执行下述命令解压,进入到解压后的文件夹:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$tar</span> -xvf linux-3.18.129.tar.xz linux-33.18.129</span><br><span class=\"line\"><span class=\"variable\">$cd</span> linux-33.18.129</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;执行内核配置时需要依赖到curses的库，用于以图形化选择配置方案,执行如下命令安装:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> apt-get install libncurses5-dev</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;对内核进行裁剪，执行如下命令进入到图形化配置界面，直接选择需要的项目进行更改，具体内容请查阅内核配置的详细文章,此处不做过多介绍:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$make</span> menuconfig</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;根据自己的需求进行相应的配置，完成后会保存为.config到该目录，当然也可以拷贝已有的文件，不用再进行配置。<br><img src=\"/2019/07/10/Linux-kernel-compile/menuconfig.png\" alt=\"MenuConfig\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;执行编译命令，开始编译，如果是多cpu，可以后接 -j(n)，这样编译能快些，不然只会一个一个的编译:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$make</span> -j4</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;编译完成后，执行如下命令安装内核modules:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> make modules_install</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;执行完毕后可以到/lib/modules下查看是否新增了对应的文件夹:<br><img src=\"/2019/07/10/Linux-kernel-compile/libmodules.png\" alt=\"libmodule\"><br>&ensp;&ensp;&ensp;&ensp;然后再执行如下命令安装内核:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sudo</span> make install</span><br></pre></td></tr></table></figure>\n\n<p>&ensp;&ensp;&ensp;&ensp;执行完毕后到/boot文件夹下查看是否新增相关文件:<br><img src=\"/2019/07/10/Linux-kernel-compile/boot.png\" alt=\"libmodule\"></p>\n<h2 id=\"使用新内核\"><a href=\"#使用新内核\" class=\"headerlink\" title=\"使用新内核\"></a>使用新内核</h2><p>&ensp;&ensp;&ensp;&ensp;安装完成后，重启机器。在重启的过程中，使用TAB+shift组合键或者ESC进入grub引导界面，不同的机器进入的方式可能会略有差异,以Ubuntu为例,启动时进入到grub,可以看到已经多出了本次编译的内核:<br><img src=\"/2019/07/10/Linux-kernel-compile/grub.png\" alt=\"grub\"><br>&ensp;&ensp;&ensp;&ensp;进入系统后再查看内核版本,已经变更为新编译的3.18.129:<br><img src=\"/2019/07/10/Linux-kernel-compile/kernelversion.png\" alt=\"kernelversion\"></p>\n"},{"title":"安装Ubuntu操作系统","date":"2019-10-10T11:56:23.000Z","author":"孙宏伟","summary":"install ubuntu system","_content":"\n## 安装Ubuntu操作系统\n\n&ensp;&ensp;&ensp;&ensp;一般可以直接将Ubuntu系统安装到磁盘上，或Ubuntu/Windows双系统，或在宿主机(当前电脑运行的系统)上安装虚拟机来运行Ubuntu，本文首先介绍一下虚拟机的安装,然后再讲解如何通过虚拟机引导Ubuntu镜像进行Ubuntu系统的安装,如果打算直接在电脑上安装Ubuntu,可以通过USB制成系统盘,然后[直接参考本部分](#jump)进行安装。对于双系统安装,只需在安装时选择选择保留Window,安装Ubuntu的选项即可,其他步骤完全相同,在此不再赘述.\n\n### 一、安装虚拟机\n\n&ensp;&ensp;&ensp;&ensp;1、前往[VirtualBox网站](https://www.virtualbox.org/) 下载安装包，根据宿主机的系统来下载安装程序，默认执行安装：\n![DownLoadVirtualBox](downloadVirtual.png)\n\n&ensp;&ensp;&ensp;&ensp;安装过程中会安装其他组件，用于网络和usb控制的，此类全部默认安装即可。\n\n\n\n### 二、创建虚拟机\n&ensp;&ensp;&ensp;&ensp;1、将Ubuntu镜像拷贝到本地，运行VirtualBox，点击“New”新创建一个虚拟机：\n![CreateVirtualBox](CreateVirtualBox.png)\n\n&ensp;&ensp;&ensp;&ensp;2、在弹出的对话框中输入新建虚拟机的名称，可自定义名称，选择虚拟机创建位置的文件夹，其他配置保持同图中一致，点击“Next”：\n![NameSystem](NameSystem.png)\n\n&ensp;&ensp;&ensp;&ensp;3、为本虚拟机分配内容，根据电脑实际情况分配，建议不要低于4G，点击“Next”：\n![SetRam](SetRam.png)\n\n&ensp;&ensp;&ensp;&ensp;4、为虚拟机分配虚拟硬盘文件，如图选择创建一个新的虚拟硬盘，点击“Next”：\n![SetRom](SetRom.png)\n\n&ensp;&ensp;&ensp;&ensp;5、选择新创建的虚拟硬盘类型，选择VDI，点击“Next”：\n![SetRomType](SetRomType.png)\n\n&ensp;&ensp;&ensp;&ensp;6、选择硬盘空间分配的模式，这里选择动态分配，硬盘文件的大小随着虚拟系统内文件的增多而增长，不会直接占用太多宿主机的空间，点击“Next”：\n![SetStorage](SetStorage.png)\n\n&ensp;&ensp;&ensp;&ensp;7、为虚拟硬盘命名，这里我们给硬盘分配100G的大小，该值是虚拟硬盘的最大容量，创建初期并不会一次性占用宿主机的100G空间，然后点击“Create”，完成虚拟机的创建：\n![NameStorage](NameStorage.png)\n\n### 三、配置虚拟机\n&ensp;&ensp;&ensp;&ensp;1、创建完成后，在VirtualBox中选择刚刚创建的虚拟机，然后点击“Setting”：\n![SettingSystem](SettingSystem.png)\n\n&ensp;&ensp;&ensp;&ensp;2、在Setting界面，选择“Storatge”，然后点击“Controller：IDE”下方的光驱图标，再点击最右侧“Attributes”下“Optical Drive”后面的光驱图标，在弹出的对话框中选择”Choose Virtual Optical Disk File”，在新弹出的对话框中选择”ubuntu-16.04.2-desktop-amd64.iso”镜像文件，然后点击OK，至此完成虚拟机的启动镜像配置：\n![SettingDetails](SettingDetails.png)\n\n<span id=\"jump\"> </span> \n### 四、安装Ubuntu系统\n\n&ensp;&ensp;&ensp;&ensp;1、在VirtualBox中选择刚刚创建的虚拟系统，点击上方的“Start”，该虚拟系统启动：\n![StartInstall](StartInstall.png)\n\n&ensp;&ensp;&ensp;&ensp;2、等待系统加载启动镜像，加载过后如下图所示，可在左侧选择安装系统的语言，选择好系统的语言后，点击“Install Ubuntu”：\n\n![InstallUbuntu](InstallUbuntu.png)\n\n&ensp;&ensp;&ensp;&ensp;3、先不做任何配置，不要勾选任何选项，直接点击“continue”：\n![ContinueInstall](ContinueInstall.png)\n\n&ensp;&ensp;&ensp;&ensp;4、选择“Erase disk and install Ubuntu”，然后点击“Install Now”，在弹出的对话框中选择“Continue”：\n![EraseInstall](EraseInstall.png)\n![EraseContine](EraseContine.png)\n\n&ensp;&ensp;&ensp;&ensp;5、选择时区，选择“Shanghai”为东8区，点击“Continue”：\n![TimeZone](TimeZone.png)\n\n&ensp;&ensp;&ensp;&ensp;6、选择键盘布局，默认点击“Continue”即可，该页面如果看不到“Continue”按钮，可以左右拖动键盘布局的对话框：\n![KeyBoard](KeyBoard.png)\n\n&ensp;&ensp;&ensp;&ensp;7、配置个人信息，然后点击“Continue”：\n![PersonConfig](PersonConfig.png)\n\n&ensp;&ensp;&ensp;&ensp;8、系统开始执行安装过程，此过程耗时较长，需要等待一段时间：\n![Installing](Installing.png)\n\n&ensp;&ensp;&ensp;&ensp;9、安装完成，点击“Restart Now”重启：\n\n![InstallComplete](InstallComplete.png)\n\n&ensp;&ensp;&ensp;&ensp;10、直接按Enter键即可重启：\n\n![RestartSystem](RestartSystem.png)\n\n\n&ensp;&ensp;&ensp;&ensp;11、重启后联网时会提示是否更新最新版本，注意点击不要更新：\n![IgnoreUpdate](IgnoreUpdate.png)\n\n### 五、安装拓展增强功能：\n\n&ensp;&ensp;&ensp;&ensp;接下来为新安装虚拟系统安装拓展插件，用以实现跨系统的复制粘贴以及全屏等功能。\n&ensp;&ensp;&ensp;&ensp;1、点击“Device”，选择“Insert Guest Additions CD image”，点击后会在虚拟系统中弹出如下的对话框点击“Run”进行安装：\n\n![InstallAddition](InstallAddition.png)\n\n&ensp;&ensp;&ensp;&ensp;2、点击“Run”后会弹出一个对话框，输入在安装时设置的密码，然后点击“Authenticate”开始进行安装：\n![RunAddition](RunAddition.png)\n\n&ensp;&ensp;&ensp;&ensp;3、安装过程中显示进度，当出现如下文字时，点击回车完成安装：\n![AdditionComplete](AdditionComplete.png)\n\n### 六、备注\n\n\n&ensp;&ensp;&ensp;&ensp;因为不同的系统对应不同的内核,因此如果为了使用某些低版本的内核而安装了较早版本的操作系统,<em style=\"color:red\">联网后会提示是否更新,此时不要进行更新</em>,因为更新会连带一起升级内核,会发送部分软件无法使用的现象.","source":"_posts/Ubuntu-Install.md","raw":"---\ntitle:  安装Ubuntu操作系统\ndate: 2019-10-10 19:56:23\nauthor:     孙宏伟\nsummary:    install ubuntu system\ncategories: Ubuntu\ntags:\n - Ubuntu\n---\n\n## 安装Ubuntu操作系统\n\n&ensp;&ensp;&ensp;&ensp;一般可以直接将Ubuntu系统安装到磁盘上，或Ubuntu/Windows双系统，或在宿主机(当前电脑运行的系统)上安装虚拟机来运行Ubuntu，本文首先介绍一下虚拟机的安装,然后再讲解如何通过虚拟机引导Ubuntu镜像进行Ubuntu系统的安装,如果打算直接在电脑上安装Ubuntu,可以通过USB制成系统盘,然后[直接参考本部分](#jump)进行安装。对于双系统安装,只需在安装时选择选择保留Window,安装Ubuntu的选项即可,其他步骤完全相同,在此不再赘述.\n\n### 一、安装虚拟机\n\n&ensp;&ensp;&ensp;&ensp;1、前往[VirtualBox网站](https://www.virtualbox.org/) 下载安装包，根据宿主机的系统来下载安装程序，默认执行安装：\n![DownLoadVirtualBox](downloadVirtual.png)\n\n&ensp;&ensp;&ensp;&ensp;安装过程中会安装其他组件，用于网络和usb控制的，此类全部默认安装即可。\n\n\n\n### 二、创建虚拟机\n&ensp;&ensp;&ensp;&ensp;1、将Ubuntu镜像拷贝到本地，运行VirtualBox，点击“New”新创建一个虚拟机：\n![CreateVirtualBox](CreateVirtualBox.png)\n\n&ensp;&ensp;&ensp;&ensp;2、在弹出的对话框中输入新建虚拟机的名称，可自定义名称，选择虚拟机创建位置的文件夹，其他配置保持同图中一致，点击“Next”：\n![NameSystem](NameSystem.png)\n\n&ensp;&ensp;&ensp;&ensp;3、为本虚拟机分配内容，根据电脑实际情况分配，建议不要低于4G，点击“Next”：\n![SetRam](SetRam.png)\n\n&ensp;&ensp;&ensp;&ensp;4、为虚拟机分配虚拟硬盘文件，如图选择创建一个新的虚拟硬盘，点击“Next”：\n![SetRom](SetRom.png)\n\n&ensp;&ensp;&ensp;&ensp;5、选择新创建的虚拟硬盘类型，选择VDI，点击“Next”：\n![SetRomType](SetRomType.png)\n\n&ensp;&ensp;&ensp;&ensp;6、选择硬盘空间分配的模式，这里选择动态分配，硬盘文件的大小随着虚拟系统内文件的增多而增长，不会直接占用太多宿主机的空间，点击“Next”：\n![SetStorage](SetStorage.png)\n\n&ensp;&ensp;&ensp;&ensp;7、为虚拟硬盘命名，这里我们给硬盘分配100G的大小，该值是虚拟硬盘的最大容量，创建初期并不会一次性占用宿主机的100G空间，然后点击“Create”，完成虚拟机的创建：\n![NameStorage](NameStorage.png)\n\n### 三、配置虚拟机\n&ensp;&ensp;&ensp;&ensp;1、创建完成后，在VirtualBox中选择刚刚创建的虚拟机，然后点击“Setting”：\n![SettingSystem](SettingSystem.png)\n\n&ensp;&ensp;&ensp;&ensp;2、在Setting界面，选择“Storatge”，然后点击“Controller：IDE”下方的光驱图标，再点击最右侧“Attributes”下“Optical Drive”后面的光驱图标，在弹出的对话框中选择”Choose Virtual Optical Disk File”，在新弹出的对话框中选择”ubuntu-16.04.2-desktop-amd64.iso”镜像文件，然后点击OK，至此完成虚拟机的启动镜像配置：\n![SettingDetails](SettingDetails.png)\n\n<span id=\"jump\"> </span> \n### 四、安装Ubuntu系统\n\n&ensp;&ensp;&ensp;&ensp;1、在VirtualBox中选择刚刚创建的虚拟系统，点击上方的“Start”，该虚拟系统启动：\n![StartInstall](StartInstall.png)\n\n&ensp;&ensp;&ensp;&ensp;2、等待系统加载启动镜像，加载过后如下图所示，可在左侧选择安装系统的语言，选择好系统的语言后，点击“Install Ubuntu”：\n\n![InstallUbuntu](InstallUbuntu.png)\n\n&ensp;&ensp;&ensp;&ensp;3、先不做任何配置，不要勾选任何选项，直接点击“continue”：\n![ContinueInstall](ContinueInstall.png)\n\n&ensp;&ensp;&ensp;&ensp;4、选择“Erase disk and install Ubuntu”，然后点击“Install Now”，在弹出的对话框中选择“Continue”：\n![EraseInstall](EraseInstall.png)\n![EraseContine](EraseContine.png)\n\n&ensp;&ensp;&ensp;&ensp;5、选择时区，选择“Shanghai”为东8区，点击“Continue”：\n![TimeZone](TimeZone.png)\n\n&ensp;&ensp;&ensp;&ensp;6、选择键盘布局，默认点击“Continue”即可，该页面如果看不到“Continue”按钮，可以左右拖动键盘布局的对话框：\n![KeyBoard](KeyBoard.png)\n\n&ensp;&ensp;&ensp;&ensp;7、配置个人信息，然后点击“Continue”：\n![PersonConfig](PersonConfig.png)\n\n&ensp;&ensp;&ensp;&ensp;8、系统开始执行安装过程，此过程耗时较长，需要等待一段时间：\n![Installing](Installing.png)\n\n&ensp;&ensp;&ensp;&ensp;9、安装完成，点击“Restart Now”重启：\n\n![InstallComplete](InstallComplete.png)\n\n&ensp;&ensp;&ensp;&ensp;10、直接按Enter键即可重启：\n\n![RestartSystem](RestartSystem.png)\n\n\n&ensp;&ensp;&ensp;&ensp;11、重启后联网时会提示是否更新最新版本，注意点击不要更新：\n![IgnoreUpdate](IgnoreUpdate.png)\n\n### 五、安装拓展增强功能：\n\n&ensp;&ensp;&ensp;&ensp;接下来为新安装虚拟系统安装拓展插件，用以实现跨系统的复制粘贴以及全屏等功能。\n&ensp;&ensp;&ensp;&ensp;1、点击“Device”，选择“Insert Guest Additions CD image”，点击后会在虚拟系统中弹出如下的对话框点击“Run”进行安装：\n\n![InstallAddition](InstallAddition.png)\n\n&ensp;&ensp;&ensp;&ensp;2、点击“Run”后会弹出一个对话框，输入在安装时设置的密码，然后点击“Authenticate”开始进行安装：\n![RunAddition](RunAddition.png)\n\n&ensp;&ensp;&ensp;&ensp;3、安装过程中显示进度，当出现如下文字时，点击回车完成安装：\n![AdditionComplete](AdditionComplete.png)\n\n### 六、备注\n\n\n&ensp;&ensp;&ensp;&ensp;因为不同的系统对应不同的内核,因此如果为了使用某些低版本的内核而安装了较早版本的操作系统,<em style=\"color:red\">联网后会提示是否更新,此时不要进行更新</em>,因为更新会连带一起升级内核,会发送部分软件无法使用的现象.","slug":"Ubuntu-Install","published":1,"updated":"2019-10-18T01:43:25.186Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2l8mid9000617alg1ki6k6k","content":"<h2 id=\"安装Ubuntu操作系统\"><a href=\"#安装Ubuntu操作系统\" class=\"headerlink\" title=\"安装Ubuntu操作系统\"></a>安装Ubuntu操作系统</h2><p>&ensp;&ensp;&ensp;&ensp;一般可以直接将Ubuntu系统安装到磁盘上，或Ubuntu/Windows双系统，或在宿主机(当前电脑运行的系统)上安装虚拟机来运行Ubuntu，本文首先介绍一下虚拟机的安装,然后再讲解如何通过虚拟机引导Ubuntu镜像进行Ubuntu系统的安装,如果打算直接在电脑上安装Ubuntu,可以通过USB制成系统盘,然后<a href=\"#jump\">直接参考本部分</a>进行安装。对于双系统安装,只需在安装时选择选择保留Window,安装Ubuntu的选项即可,其他步骤完全相同,在此不再赘述.</p>\n<h3 id=\"一、安装虚拟机\"><a href=\"#一、安装虚拟机\" class=\"headerlink\" title=\"一、安装虚拟机\"></a>一、安装虚拟机</h3><p>&ensp;&ensp;&ensp;&ensp;1、前往<a href=\"https://www.virtualbox.org/\" target=\"_blank\" rel=\"noopener\">VirtualBox网站</a> 下载安装包，根据宿主机的系统来下载安装程序，默认执行安装：<br><img src=\"/2019/10/10/Ubuntu-Install/downloadVirtual.png\" alt=\"DownLoadVirtualBox\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;安装过程中会安装其他组件，用于网络和usb控制的，此类全部默认安装即可。</p>\n<h3 id=\"二、创建虚拟机\"><a href=\"#二、创建虚拟机\" class=\"headerlink\" title=\"二、创建虚拟机\"></a>二、创建虚拟机</h3><p>&ensp;&ensp;&ensp;&ensp;1、将Ubuntu镜像拷贝到本地，运行VirtualBox，点击“New”新创建一个虚拟机：<br><img src=\"/2019/10/10/Ubuntu-Install/CreateVirtualBox.png\" alt=\"CreateVirtualBox\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;2、在弹出的对话框中输入新建虚拟机的名称，可自定义名称，选择虚拟机创建位置的文件夹，其他配置保持同图中一致，点击“Next”：<br><img src=\"/2019/10/10/Ubuntu-Install/NameSystem.png\" alt=\"NameSystem\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;3、为本虚拟机分配内容，根据电脑实际情况分配，建议不要低于4G，点击“Next”：<br><img src=\"/2019/10/10/Ubuntu-Install/SetRam.png\" alt=\"SetRam\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;4、为虚拟机分配虚拟硬盘文件，如图选择创建一个新的虚拟硬盘，点击“Next”：<br><img src=\"/2019/10/10/Ubuntu-Install/SetRom.png\" alt=\"SetRom\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;5、选择新创建的虚拟硬盘类型，选择VDI，点击“Next”：<br><img src=\"/2019/10/10/Ubuntu-Install/SetRomType.png\" alt=\"SetRomType\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;6、选择硬盘空间分配的模式，这里选择动态分配，硬盘文件的大小随着虚拟系统内文件的增多而增长，不会直接占用太多宿主机的空间，点击“Next”：<br><img src=\"/2019/10/10/Ubuntu-Install/SetStorage.png\" alt=\"SetStorage\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;7、为虚拟硬盘命名，这里我们给硬盘分配100G的大小，该值是虚拟硬盘的最大容量，创建初期并不会一次性占用宿主机的100G空间，然后点击“Create”，完成虚拟机的创建：<br><img src=\"/2019/10/10/Ubuntu-Install/NameStorage.png\" alt=\"NameStorage\"></p>\n<h3 id=\"三、配置虚拟机\"><a href=\"#三、配置虚拟机\" class=\"headerlink\" title=\"三、配置虚拟机\"></a>三、配置虚拟机</h3><p>&ensp;&ensp;&ensp;&ensp;1、创建完成后，在VirtualBox中选择刚刚创建的虚拟机，然后点击“Setting”：<br><img src=\"/2019/10/10/Ubuntu-Install/SettingSystem.png\" alt=\"SettingSystem\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;2、在Setting界面，选择“Storatge”，然后点击“Controller：IDE”下方的光驱图标，再点击最右侧“Attributes”下“Optical Drive”后面的光驱图标，在弹出的对话框中选择”Choose Virtual Optical Disk File”，在新弹出的对话框中选择”ubuntu-16.04.2-desktop-amd64.iso”镜像文件，然后点击OK，至此完成虚拟机的启动镜像配置：<br><img src=\"/2019/10/10/Ubuntu-Install/SettingDetails.png\" alt=\"SettingDetails\"></p>\n<p><span id=\"jump\"> </span> </p>\n<h3 id=\"四、安装Ubuntu系统\"><a href=\"#四、安装Ubuntu系统\" class=\"headerlink\" title=\"四、安装Ubuntu系统\"></a>四、安装Ubuntu系统</h3><p>&ensp;&ensp;&ensp;&ensp;1、在VirtualBox中选择刚刚创建的虚拟系统，点击上方的“Start”，该虚拟系统启动：<br><img src=\"/2019/10/10/Ubuntu-Install/StartInstall.png\" alt=\"StartInstall\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;2、等待系统加载启动镜像，加载过后如下图所示，可在左侧选择安装系统的语言，选择好系统的语言后，点击“Install Ubuntu”：</p>\n<p><img src=\"/2019/10/10/Ubuntu-Install/InstallUbuntu.png\" alt=\"InstallUbuntu\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;3、先不做任何配置，不要勾选任何选项，直接点击“continue”：<br><img src=\"/2019/10/10/Ubuntu-Install/ContinueInstall.png\" alt=\"ContinueInstall\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;4、选择“Erase disk and install Ubuntu”，然后点击“Install Now”，在弹出的对话框中选择“Continue”：<br><img src=\"/2019/10/10/Ubuntu-Install/EraseInstall.png\" alt=\"EraseInstall\"><br><img src=\"/2019/10/10/Ubuntu-Install/EraseContine.png\" alt=\"EraseContine\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;5、选择时区，选择“Shanghai”为东8区，点击“Continue”：<br><img src=\"/2019/10/10/Ubuntu-Install/TimeZone.png\" alt=\"TimeZone\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;6、选择键盘布局，默认点击“Continue”即可，该页面如果看不到“Continue”按钮，可以左右拖动键盘布局的对话框：<br><img src=\"/2019/10/10/Ubuntu-Install/KeyBoard.png\" alt=\"KeyBoard\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;7、配置个人信息，然后点击“Continue”：<br><img src=\"/2019/10/10/Ubuntu-Install/PersonConfig.png\" alt=\"PersonConfig\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;8、系统开始执行安装过程，此过程耗时较长，需要等待一段时间：<br><img src=\"/2019/10/10/Ubuntu-Install/Installing.png\" alt=\"Installing\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;9、安装完成，点击“Restart Now”重启：</p>\n<p><img src=\"/2019/10/10/Ubuntu-Install/InstallComplete.png\" alt=\"InstallComplete\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;10、直接按Enter键即可重启：</p>\n<p><img src=\"/2019/10/10/Ubuntu-Install/RestartSystem.png\" alt=\"RestartSystem\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;11、重启后联网时会提示是否更新最新版本，注意点击不要更新：<br><img src=\"/2019/10/10/Ubuntu-Install/IgnoreUpdate.png\" alt=\"IgnoreUpdate\"></p>\n<h3 id=\"五、安装拓展增强功能：\"><a href=\"#五、安装拓展增强功能：\" class=\"headerlink\" title=\"五、安装拓展增强功能：\"></a>五、安装拓展增强功能：</h3><p>&ensp;&ensp;&ensp;&ensp;接下来为新安装虚拟系统安装拓展插件，用以实现跨系统的复制粘贴以及全屏等功能。<br>&ensp;&ensp;&ensp;&ensp;1、点击“Device”，选择“Insert Guest Additions CD image”，点击后会在虚拟系统中弹出如下的对话框点击“Run”进行安装：</p>\n<p><img src=\"/2019/10/10/Ubuntu-Install/InstallAddition.png\" alt=\"InstallAddition\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;2、点击“Run”后会弹出一个对话框，输入在安装时设置的密码，然后点击“Authenticate”开始进行安装：<br><img src=\"/2019/10/10/Ubuntu-Install/RunAddition.png\" alt=\"RunAddition\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;3、安装过程中显示进度，当出现如下文字时，点击回车完成安装：<br><img src=\"/2019/10/10/Ubuntu-Install/AdditionComplete.png\" alt=\"AdditionComplete\"></p>\n<h3 id=\"六、备注\"><a href=\"#六、备注\" class=\"headerlink\" title=\"六、备注\"></a>六、备注</h3><p>&ensp;&ensp;&ensp;&ensp;因为不同的系统对应不同的内核,因此如果为了使用某些低版本的内核而安装了较早版本的操作系统,<em style=\"color:red\">联网后会提示是否更新,此时不要进行更新</em>,因为更新会连带一起升级内核,会发送部分软件无法使用的现象.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装Ubuntu操作系统\"><a href=\"#安装Ubuntu操作系统\" class=\"headerlink\" title=\"安装Ubuntu操作系统\"></a>安装Ubuntu操作系统</h2><p>&ensp;&ensp;&ensp;&ensp;一般可以直接将Ubuntu系统安装到磁盘上，或Ubuntu/Windows双系统，或在宿主机(当前电脑运行的系统)上安装虚拟机来运行Ubuntu，本文首先介绍一下虚拟机的安装,然后再讲解如何通过虚拟机引导Ubuntu镜像进行Ubuntu系统的安装,如果打算直接在电脑上安装Ubuntu,可以通过USB制成系统盘,然后<a href=\"#jump\">直接参考本部分</a>进行安装。对于双系统安装,只需在安装时选择选择保留Window,安装Ubuntu的选项即可,其他步骤完全相同,在此不再赘述.</p>\n<h3 id=\"一、安装虚拟机\"><a href=\"#一、安装虚拟机\" class=\"headerlink\" title=\"一、安装虚拟机\"></a>一、安装虚拟机</h3><p>&ensp;&ensp;&ensp;&ensp;1、前往<a href=\"https://www.virtualbox.org/\" target=\"_blank\" rel=\"noopener\">VirtualBox网站</a> 下载安装包，根据宿主机的系统来下载安装程序，默认执行安装：<br><img src=\"/2019/10/10/Ubuntu-Install/downloadVirtual.png\" alt=\"DownLoadVirtualBox\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;安装过程中会安装其他组件，用于网络和usb控制的，此类全部默认安装即可。</p>\n<h3 id=\"二、创建虚拟机\"><a href=\"#二、创建虚拟机\" class=\"headerlink\" title=\"二、创建虚拟机\"></a>二、创建虚拟机</h3><p>&ensp;&ensp;&ensp;&ensp;1、将Ubuntu镜像拷贝到本地，运行VirtualBox，点击“New”新创建一个虚拟机：<br><img src=\"/2019/10/10/Ubuntu-Install/CreateVirtualBox.png\" alt=\"CreateVirtualBox\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;2、在弹出的对话框中输入新建虚拟机的名称，可自定义名称，选择虚拟机创建位置的文件夹，其他配置保持同图中一致，点击“Next”：<br><img src=\"/2019/10/10/Ubuntu-Install/NameSystem.png\" alt=\"NameSystem\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;3、为本虚拟机分配内容，根据电脑实际情况分配，建议不要低于4G，点击“Next”：<br><img src=\"/2019/10/10/Ubuntu-Install/SetRam.png\" alt=\"SetRam\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;4、为虚拟机分配虚拟硬盘文件，如图选择创建一个新的虚拟硬盘，点击“Next”：<br><img src=\"/2019/10/10/Ubuntu-Install/SetRom.png\" alt=\"SetRom\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;5、选择新创建的虚拟硬盘类型，选择VDI，点击“Next”：<br><img src=\"/2019/10/10/Ubuntu-Install/SetRomType.png\" alt=\"SetRomType\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;6、选择硬盘空间分配的模式，这里选择动态分配，硬盘文件的大小随着虚拟系统内文件的增多而增长，不会直接占用太多宿主机的空间，点击“Next”：<br><img src=\"/2019/10/10/Ubuntu-Install/SetStorage.png\" alt=\"SetStorage\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;7、为虚拟硬盘命名，这里我们给硬盘分配100G的大小，该值是虚拟硬盘的最大容量，创建初期并不会一次性占用宿主机的100G空间，然后点击“Create”，完成虚拟机的创建：<br><img src=\"/2019/10/10/Ubuntu-Install/NameStorage.png\" alt=\"NameStorage\"></p>\n<h3 id=\"三、配置虚拟机\"><a href=\"#三、配置虚拟机\" class=\"headerlink\" title=\"三、配置虚拟机\"></a>三、配置虚拟机</h3><p>&ensp;&ensp;&ensp;&ensp;1、创建完成后，在VirtualBox中选择刚刚创建的虚拟机，然后点击“Setting”：<br><img src=\"/2019/10/10/Ubuntu-Install/SettingSystem.png\" alt=\"SettingSystem\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;2、在Setting界面，选择“Storatge”，然后点击“Controller：IDE”下方的光驱图标，再点击最右侧“Attributes”下“Optical Drive”后面的光驱图标，在弹出的对话框中选择”Choose Virtual Optical Disk File”，在新弹出的对话框中选择”ubuntu-16.04.2-desktop-amd64.iso”镜像文件，然后点击OK，至此完成虚拟机的启动镜像配置：<br><img src=\"/2019/10/10/Ubuntu-Install/SettingDetails.png\" alt=\"SettingDetails\"></p>\n<p><span id=\"jump\"> </span> </p>\n<h3 id=\"四、安装Ubuntu系统\"><a href=\"#四、安装Ubuntu系统\" class=\"headerlink\" title=\"四、安装Ubuntu系统\"></a>四、安装Ubuntu系统</h3><p>&ensp;&ensp;&ensp;&ensp;1、在VirtualBox中选择刚刚创建的虚拟系统，点击上方的“Start”，该虚拟系统启动：<br><img src=\"/2019/10/10/Ubuntu-Install/StartInstall.png\" alt=\"StartInstall\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;2、等待系统加载启动镜像，加载过后如下图所示，可在左侧选择安装系统的语言，选择好系统的语言后，点击“Install Ubuntu”：</p>\n<p><img src=\"/2019/10/10/Ubuntu-Install/InstallUbuntu.png\" alt=\"InstallUbuntu\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;3、先不做任何配置，不要勾选任何选项，直接点击“continue”：<br><img src=\"/2019/10/10/Ubuntu-Install/ContinueInstall.png\" alt=\"ContinueInstall\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;4、选择“Erase disk and install Ubuntu”，然后点击“Install Now”，在弹出的对话框中选择“Continue”：<br><img src=\"/2019/10/10/Ubuntu-Install/EraseInstall.png\" alt=\"EraseInstall\"><br><img src=\"/2019/10/10/Ubuntu-Install/EraseContine.png\" alt=\"EraseContine\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;5、选择时区，选择“Shanghai”为东8区，点击“Continue”：<br><img src=\"/2019/10/10/Ubuntu-Install/TimeZone.png\" alt=\"TimeZone\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;6、选择键盘布局，默认点击“Continue”即可，该页面如果看不到“Continue”按钮，可以左右拖动键盘布局的对话框：<br><img src=\"/2019/10/10/Ubuntu-Install/KeyBoard.png\" alt=\"KeyBoard\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;7、配置个人信息，然后点击“Continue”：<br><img src=\"/2019/10/10/Ubuntu-Install/PersonConfig.png\" alt=\"PersonConfig\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;8、系统开始执行安装过程，此过程耗时较长，需要等待一段时间：<br><img src=\"/2019/10/10/Ubuntu-Install/Installing.png\" alt=\"Installing\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;9、安装完成，点击“Restart Now”重启：</p>\n<p><img src=\"/2019/10/10/Ubuntu-Install/InstallComplete.png\" alt=\"InstallComplete\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;10、直接按Enter键即可重启：</p>\n<p><img src=\"/2019/10/10/Ubuntu-Install/RestartSystem.png\" alt=\"RestartSystem\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;11、重启后联网时会提示是否更新最新版本，注意点击不要更新：<br><img src=\"/2019/10/10/Ubuntu-Install/IgnoreUpdate.png\" alt=\"IgnoreUpdate\"></p>\n<h3 id=\"五、安装拓展增强功能：\"><a href=\"#五、安装拓展增强功能：\" class=\"headerlink\" title=\"五、安装拓展增强功能：\"></a>五、安装拓展增强功能：</h3><p>&ensp;&ensp;&ensp;&ensp;接下来为新安装虚拟系统安装拓展插件，用以实现跨系统的复制粘贴以及全屏等功能。<br>&ensp;&ensp;&ensp;&ensp;1、点击“Device”，选择“Insert Guest Additions CD image”，点击后会在虚拟系统中弹出如下的对话框点击“Run”进行安装：</p>\n<p><img src=\"/2019/10/10/Ubuntu-Install/InstallAddition.png\" alt=\"InstallAddition\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;2、点击“Run”后会弹出一个对话框，输入在安装时设置的密码，然后点击“Authenticate”开始进行安装：<br><img src=\"/2019/10/10/Ubuntu-Install/RunAddition.png\" alt=\"RunAddition\"></p>\n<p>&ensp;&ensp;&ensp;&ensp;3、安装过程中显示进度，当出现如下文字时，点击回车完成安装：<br><img src=\"/2019/10/10/Ubuntu-Install/AdditionComplete.png\" alt=\"AdditionComplete\"></p>\n<h3 id=\"六、备注\"><a href=\"#六、备注\" class=\"headerlink\" title=\"六、备注\"></a>六、备注</h3><p>&ensp;&ensp;&ensp;&ensp;因为不同的系统对应不同的内核,因此如果为了使用某些低版本的内核而安装了较早版本的操作系统,<em style=\"color:red\">联网后会提示是否更新,此时不要进行更新</em>,因为更新会连带一起升级内核,会发送部分软件无法使用的现象.</p>\n"},{"title":"OSX下解决Gradle同步失败的问题","date":"2018-08-03T00:04:56.000Z","author":"孙宏伟","_content":"\n\n## 1、下载Android Studio\n&ensp; &ensp;&ensp; &ensp;  OSX下Android Studio的安装过程就不多叙述了,和安装其他软件方法一样,需要注意的是国外的Android开发者网站被封了,这里提供一个Android Studio的[下载地址](https://developer.android.google.cn/studio/).\n\n![DownLoad Android Studio](download.png)\n\n## 2、安装Android Studio\n&ensp; &ensp;&ensp; &ensp; 我下载的是“android-studio-ide-173.4819257-mac.dmg”,下载好安装文件后双击,然后将其拖到App文件夹即可使用.\n\n![install Android Studio](install.png)\n\n## 3、下载复制Gradle文件\n\n&ensp; &ensp; &ensp; &ensp; 但是在第一次启动Android Studio构建项目常常会出现卡住下载不动或者失败的的情况,下面介绍下如何解决这个问题.\n\n&ensp; &ensp;&ensp; &ensp; 首先需要找到“.gradle”目录,大部分位于“~/”目录下,进入\"/Users/<em style=\"color: red\">sun</em>/.gradle/wrapper/dists/gradle-4.4-all/<em style=\"color:red\">9br9xq1tocpiv8o6njlyu5op1</em>\",其中<em style=\"color:red\">红色字体</em>部分是我自己电脑的情况,可能会有不同,osx下使用\"**shift+command+.**\"可以查看隐藏的文件夹,进入到该文件夹删除文件夹内<em style=\"color:#FF00FF\n\">\".part\"</em>文件:\n\n![delete .part file](gradlepath.png)\n\n&ensp; &ensp;&ensp; &ensp; 然后登陆到[gradle资源](https://services.gradle.org/distributions)的网站下载对应的[gradle-4.4-all.zip](https://services.gradle.org/distributions/gradle-4.4-all.zip),下载后不需要解压,直接复制到上述文件夹中.\n\n![gradle download](gradlefile.png)\n\n\n## 4、重新启动Android Studio\n\n&ensp; &ensp; &ensp; &ensp; 重新启动Android Studio即可解决gradle构建失败或者卡住的问题了.\n\n![run Android Studio](androidstudio.png)\n","source":"_posts/mac-androidstudio.md","raw":"---\ntitle:        OSX下解决Gradle同步失败的问题\ndate:       2018-08-03 08:04:56\nauthor:     孙宏伟\ncategories: Android\ntags:\n - OSX\n - Android Studio\n---\n\n\n## 1、下载Android Studio\n&ensp; &ensp;&ensp; &ensp;  OSX下Android Studio的安装过程就不多叙述了,和安装其他软件方法一样,需要注意的是国外的Android开发者网站被封了,这里提供一个Android Studio的[下载地址](https://developer.android.google.cn/studio/).\n\n![DownLoad Android Studio](download.png)\n\n## 2、安装Android Studio\n&ensp; &ensp;&ensp; &ensp; 我下载的是“android-studio-ide-173.4819257-mac.dmg”,下载好安装文件后双击,然后将其拖到App文件夹即可使用.\n\n![install Android Studio](install.png)\n\n## 3、下载复制Gradle文件\n\n&ensp; &ensp; &ensp; &ensp; 但是在第一次启动Android Studio构建项目常常会出现卡住下载不动或者失败的的情况,下面介绍下如何解决这个问题.\n\n&ensp; &ensp;&ensp; &ensp; 首先需要找到“.gradle”目录,大部分位于“~/”目录下,进入\"/Users/<em style=\"color: red\">sun</em>/.gradle/wrapper/dists/gradle-4.4-all/<em style=\"color:red\">9br9xq1tocpiv8o6njlyu5op1</em>\",其中<em style=\"color:red\">红色字体</em>部分是我自己电脑的情况,可能会有不同,osx下使用\"**shift+command+.**\"可以查看隐藏的文件夹,进入到该文件夹删除文件夹内<em style=\"color:#FF00FF\n\">\".part\"</em>文件:\n\n![delete .part file](gradlepath.png)\n\n&ensp; &ensp;&ensp; &ensp; 然后登陆到[gradle资源](https://services.gradle.org/distributions)的网站下载对应的[gradle-4.4-all.zip](https://services.gradle.org/distributions/gradle-4.4-all.zip),下载后不需要解压,直接复制到上述文件夹中.\n\n![gradle download](gradlefile.png)\n\n\n## 4、重新启动Android Studio\n\n&ensp; &ensp; &ensp; &ensp; 重新启动Android Studio即可解决gradle构建失败或者卡住的问题了.\n\n![run Android Studio](androidstudio.png)\n","slug":"mac-androidstudio","published":1,"updated":"2019-10-11T05:04:11.789Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2l8midb000817alj1o6a4qa","content":"<h2 id=\"1、下载Android-Studio\"><a href=\"#1、下载Android-Studio\" class=\"headerlink\" title=\"1、下载Android Studio\"></a>1、下载Android Studio</h2><p>&ensp; &ensp;&ensp; &ensp;  OSX下Android Studio的安装过程就不多叙述了,和安装其他软件方法一样,需要注意的是国外的Android开发者网站被封了,这里提供一个Android Studio的<a href=\"https://developer.android.google.cn/studio/\" target=\"_blank\" rel=\"noopener\">下载地址</a>.</p>\n<p><img src=\"/2018/08/03/mac-androidstudio/download.png\" alt=\"DownLoad Android Studio\"></p>\n<h2 id=\"2、安装Android-Studio\"><a href=\"#2、安装Android-Studio\" class=\"headerlink\" title=\"2、安装Android Studio\"></a>2、安装Android Studio</h2><p>&ensp; &ensp;&ensp; &ensp; 我下载的是“android-studio-ide-173.4819257-mac.dmg”,下载好安装文件后双击,然后将其拖到App文件夹即可使用.</p>\n<p><img src=\"/2018/08/03/mac-androidstudio/install.png\" alt=\"install Android Studio\"></p>\n<h2 id=\"3、下载复制Gradle文件\"><a href=\"#3、下载复制Gradle文件\" class=\"headerlink\" title=\"3、下载复制Gradle文件\"></a>3、下载复制Gradle文件</h2><p>&ensp; &ensp; &ensp; &ensp; 但是在第一次启动Android Studio构建项目常常会出现卡住下载不动或者失败的的情况,下面介绍下如何解决这个问题.</p>\n<p>&ensp; &ensp;&ensp; &ensp; 首先需要找到“.gradle”目录,大部分位于“~/”目录下,进入”/Users/<em style=\"color: red\">sun</em>/.gradle/wrapper/dists/gradle-4.4-all/<em style=\"color:red\">9br9xq1tocpiv8o6njlyu5op1</em>“,其中<em style=\"color:red\">红色字体</em>部分是我自己电脑的情况,可能会有不同,osx下使用”<strong>shift+command+.</strong>“可以查看隐藏的文件夹,进入到该文件夹删除文件夹内<em style=\"color:#FF00FF\n\">“.part”</em>文件:</p>\n<p><img src=\"/2018/08/03/mac-androidstudio/gradlepath.png\" alt=\"delete .part file\"></p>\n<p>&ensp; &ensp;&ensp; &ensp; 然后登陆到<a href=\"https://services.gradle.org/distributions\" target=\"_blank\" rel=\"noopener\">gradle资源</a>的网站下载对应的<a href=\"https://services.gradle.org/distributions/gradle-4.4-all.zip\" target=\"_blank\" rel=\"noopener\">gradle-4.4-all.zip</a>,下载后不需要解压,直接复制到上述文件夹中.</p>\n<p><img src=\"/2018/08/03/mac-androidstudio/gradlefile.png\" alt=\"gradle download\"></p>\n<h2 id=\"4、重新启动Android-Studio\"><a href=\"#4、重新启动Android-Studio\" class=\"headerlink\" title=\"4、重新启动Android Studio\"></a>4、重新启动Android Studio</h2><p>&ensp; &ensp; &ensp; &ensp; 重新启动Android Studio即可解决gradle构建失败或者卡住的问题了.</p>\n<p><img src=\"/2018/08/03/mac-androidstudio/androidstudio.png\" alt=\"run Android Studio\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1、下载Android-Studio\"><a href=\"#1、下载Android-Studio\" class=\"headerlink\" title=\"1、下载Android Studio\"></a>1、下载Android Studio</h2><p>&ensp; &ensp;&ensp; &ensp;  OSX下Android Studio的安装过程就不多叙述了,和安装其他软件方法一样,需要注意的是国外的Android开发者网站被封了,这里提供一个Android Studio的<a href=\"https://developer.android.google.cn/studio/\" target=\"_blank\" rel=\"noopener\">下载地址</a>.</p>\n<p><img src=\"/2018/08/03/mac-androidstudio/download.png\" alt=\"DownLoad Android Studio\"></p>\n<h2 id=\"2、安装Android-Studio\"><a href=\"#2、安装Android-Studio\" class=\"headerlink\" title=\"2、安装Android Studio\"></a>2、安装Android Studio</h2><p>&ensp; &ensp;&ensp; &ensp; 我下载的是“android-studio-ide-173.4819257-mac.dmg”,下载好安装文件后双击,然后将其拖到App文件夹即可使用.</p>\n<p><img src=\"/2018/08/03/mac-androidstudio/install.png\" alt=\"install Android Studio\"></p>\n<h2 id=\"3、下载复制Gradle文件\"><a href=\"#3、下载复制Gradle文件\" class=\"headerlink\" title=\"3、下载复制Gradle文件\"></a>3、下载复制Gradle文件</h2><p>&ensp; &ensp; &ensp; &ensp; 但是在第一次启动Android Studio构建项目常常会出现卡住下载不动或者失败的的情况,下面介绍下如何解决这个问题.</p>\n<p>&ensp; &ensp;&ensp; &ensp; 首先需要找到“.gradle”目录,大部分位于“~/”目录下,进入”/Users/<em style=\"color: red\">sun</em>/.gradle/wrapper/dists/gradle-4.4-all/<em style=\"color:red\">9br9xq1tocpiv8o6njlyu5op1</em>“,其中<em style=\"color:red\">红色字体</em>部分是我自己电脑的情况,可能会有不同,osx下使用”<strong>shift+command+.</strong>“可以查看隐藏的文件夹,进入到该文件夹删除文件夹内<em style=\"color:#FF00FF\n\">“.part”</em>文件:</p>\n<p><img src=\"/2018/08/03/mac-androidstudio/gradlepath.png\" alt=\"delete .part file\"></p>\n<p>&ensp; &ensp;&ensp; &ensp; 然后登陆到<a href=\"https://services.gradle.org/distributions\" target=\"_blank\" rel=\"noopener\">gradle资源</a>的网站下载对应的<a href=\"https://services.gradle.org/distributions/gradle-4.4-all.zip\" target=\"_blank\" rel=\"noopener\">gradle-4.4-all.zip</a>,下载后不需要解压,直接复制到上述文件夹中.</p>\n<p><img src=\"/2018/08/03/mac-androidstudio/gradlefile.png\" alt=\"gradle download\"></p>\n<h2 id=\"4、重新启动Android-Studio\"><a href=\"#4、重新启动Android-Studio\" class=\"headerlink\" title=\"4、重新启动Android Studio\"></a>4、重新启动Android Studio</h2><p>&ensp; &ensp; &ensp; &ensp; 重新启动Android Studio即可解决gradle构建失败或者卡住的问题了.</p>\n<p><img src=\"/2018/08/03/mac-androidstudio/androidstudio.png\" alt=\"run Android Studio\"></p>\n"},{"title":"NVMe硬盘上安装Ubuntu","date":"2019-10-08T11:17:20.000Z","author":"孙宏伟","summary":"Install Ubuntu On NVMe","_content":"\n\n## 在NVMe硬盘上安装Ubuntu\n\n### 现象\n&ensp;&ensp;&ensp;&ensp;今天在帮同事安装Ubuntu时遇到点困难,整理一下.同事的电脑是Dell inspire 5488,18年生产的.因为开发工具原因我们需要使用Ubuntu16.04(Kernel:4.15.0-29).因为是同事电脑,安装时没拍照,安装好后也不好再折腾一遍,就纯文字描述了.\n\n&ensp;&ensp;&ensp;&ensp;一开始采用UEFI的方式安装,启动后进入BIOS,发现了两个安装的U盘,随意选一个进入下一步,结果往下进行后提示如下:\n>安装Ubuntu需要8.3G的控空间,而磁盘只有4G\n\n&ensp;&ensp;&ensp;&ensp;以为是启动时的U盘选差了, 重启再选另外一个,仍然是这个原因,重新给U盘烧写系统仍是上述现象.\n\n&ensp;&ensp;&ensp;&ensp;后来决定放弃使用UEFI模式启动,使用Legacy方式,虽然可以安装系统,但是启动后提示找不到启动的设备.没法发现电脑的硬盘.\n\n---\n\n### 原因\n&ensp;&ensp;&ensp;&ensp;发送上述现象是因为该电脑为固态硬盘,BIOS中硬盘模式开启了Rapid ON的模式,硬盘在Linux系统中不是传统的 /dev/sd* 这样的形式存在的,所以找不到硬盘.\n\n---\n\n### 解决方法\n&ensp;&ensp;&ensp;&ensp;将BIOS的启动参数进行如下设置:\n\n>1. 采用Legacy方式启动;\n>1. 将硬盘模式更改为ACHI;\n>1. 将UEFI Boot Security 更改为Off;\n\n&ensp;&ensp;&ensp;&ensp;然后重启进入BIOS界面,会有Legacy启动选项和UEFI启动选项,选择UEFI选项下的U盘作为启动介质,此时会提示在非UEFI模式下选择采用UEFI模式安装,同意该方式,继续下一步,直至安装结束.\n\n&ensp;&ensp;&ensp;&ensp;重启后进入到BIOS看一下,是否还存在Legacy这个启动选项,如果存在的话则将该方式关闭,并且将UEFI中的Security Boot 更改为Off即可正常使用.\n\n---\n\n### 关于UEFI和Leagacy\n>UEFI技术较新,只支持64位操作系统,启动速度较快;\n\n>Legacy是传统的启动模式,不能支持超过2T的硬盘;\n\n&ensp;&ensp;&ensp;&ensp;更多区别和细节就百度一下吧,不细说了.\n","source":"_posts/Ubuntu-NVMe.md","raw":"---\ntitle:      NVMe硬盘上安装Ubuntu\ndate:       2019-10-08 19:17:20\nauthor:     孙宏伟\nsummary:    Install Ubuntu On NVMe\ncategories:  Ubuntu\ntags:\n - Ubuntu\n---\n\n\n## 在NVMe硬盘上安装Ubuntu\n\n### 现象\n&ensp;&ensp;&ensp;&ensp;今天在帮同事安装Ubuntu时遇到点困难,整理一下.同事的电脑是Dell inspire 5488,18年生产的.因为开发工具原因我们需要使用Ubuntu16.04(Kernel:4.15.0-29).因为是同事电脑,安装时没拍照,安装好后也不好再折腾一遍,就纯文字描述了.\n\n&ensp;&ensp;&ensp;&ensp;一开始采用UEFI的方式安装,启动后进入BIOS,发现了两个安装的U盘,随意选一个进入下一步,结果往下进行后提示如下:\n>安装Ubuntu需要8.3G的控空间,而磁盘只有4G\n\n&ensp;&ensp;&ensp;&ensp;以为是启动时的U盘选差了, 重启再选另外一个,仍然是这个原因,重新给U盘烧写系统仍是上述现象.\n\n&ensp;&ensp;&ensp;&ensp;后来决定放弃使用UEFI模式启动,使用Legacy方式,虽然可以安装系统,但是启动后提示找不到启动的设备.没法发现电脑的硬盘.\n\n---\n\n### 原因\n&ensp;&ensp;&ensp;&ensp;发送上述现象是因为该电脑为固态硬盘,BIOS中硬盘模式开启了Rapid ON的模式,硬盘在Linux系统中不是传统的 /dev/sd* 这样的形式存在的,所以找不到硬盘.\n\n---\n\n### 解决方法\n&ensp;&ensp;&ensp;&ensp;将BIOS的启动参数进行如下设置:\n\n>1. 采用Legacy方式启动;\n>1. 将硬盘模式更改为ACHI;\n>1. 将UEFI Boot Security 更改为Off;\n\n&ensp;&ensp;&ensp;&ensp;然后重启进入BIOS界面,会有Legacy启动选项和UEFI启动选项,选择UEFI选项下的U盘作为启动介质,此时会提示在非UEFI模式下选择采用UEFI模式安装,同意该方式,继续下一步,直至安装结束.\n\n&ensp;&ensp;&ensp;&ensp;重启后进入到BIOS看一下,是否还存在Legacy这个启动选项,如果存在的话则将该方式关闭,并且将UEFI中的Security Boot 更改为Off即可正常使用.\n\n---\n\n### 关于UEFI和Leagacy\n>UEFI技术较新,只支持64位操作系统,启动速度较快;\n\n>Legacy是传统的启动模式,不能支持超过2T的硬盘;\n\n&ensp;&ensp;&ensp;&ensp;更多区别和细节就百度一下吧,不细说了.\n","slug":"Ubuntu-NVMe","published":1,"updated":"2019-10-11T05:05:16.101Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2l8midj000917alaloa36fh","content":"<h2 id=\"在NVMe硬盘上安装Ubuntu\"><a href=\"#在NVMe硬盘上安装Ubuntu\" class=\"headerlink\" title=\"在NVMe硬盘上安装Ubuntu\"></a>在NVMe硬盘上安装Ubuntu</h2><h3 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h3><p>&ensp;&ensp;&ensp;&ensp;今天在帮同事安装Ubuntu时遇到点困难,整理一下.同事的电脑是Dell inspire 5488,18年生产的.因为开发工具原因我们需要使用Ubuntu16.04(Kernel:4.15.0-29).因为是同事电脑,安装时没拍照,安装好后也不好再折腾一遍,就纯文字描述了.</p>\n<p>&ensp;&ensp;&ensp;&ensp;一开始采用UEFI的方式安装,启动后进入BIOS,发现了两个安装的U盘,随意选一个进入下一步,结果往下进行后提示如下:</p>\n<blockquote>\n<p>安装Ubuntu需要8.3G的控空间,而磁盘只有4G</p>\n</blockquote>\n<p>&ensp;&ensp;&ensp;&ensp;以为是启动时的U盘选差了, 重启再选另外一个,仍然是这个原因,重新给U盘烧写系统仍是上述现象.</p>\n<p>&ensp;&ensp;&ensp;&ensp;后来决定放弃使用UEFI模式启动,使用Legacy方式,虽然可以安装系统,但是启动后提示找不到启动的设备.没法发现电脑的硬盘.</p>\n<hr>\n<h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><p>&ensp;&ensp;&ensp;&ensp;发送上述现象是因为该电脑为固态硬盘,BIOS中硬盘模式开启了Rapid ON的模式,硬盘在Linux系统中不是传统的 /dev/sd* 这样的形式存在的,所以找不到硬盘.</p>\n<hr>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>&ensp;&ensp;&ensp;&ensp;将BIOS的启动参数进行如下设置:</p>\n<blockquote>\n<ol>\n<li>采用Legacy方式启动;</li>\n<li>将硬盘模式更改为ACHI;</li>\n<li>将UEFI Boot Security 更改为Off;</li>\n</ol>\n</blockquote>\n<p>&ensp;&ensp;&ensp;&ensp;然后重启进入BIOS界面,会有Legacy启动选项和UEFI启动选项,选择UEFI选项下的U盘作为启动介质,此时会提示在非UEFI模式下选择采用UEFI模式安装,同意该方式,继续下一步,直至安装结束.</p>\n<p>&ensp;&ensp;&ensp;&ensp;重启后进入到BIOS看一下,是否还存在Legacy这个启动选项,如果存在的话则将该方式关闭,并且将UEFI中的Security Boot 更改为Off即可正常使用.</p>\n<hr>\n<h3 id=\"关于UEFI和Leagacy\"><a href=\"#关于UEFI和Leagacy\" class=\"headerlink\" title=\"关于UEFI和Leagacy\"></a>关于UEFI和Leagacy</h3><blockquote>\n<p>UEFI技术较新,只支持64位操作系统,启动速度较快;</p>\n</blockquote>\n<blockquote>\n<p>Legacy是传统的启动模式,不能支持超过2T的硬盘;</p>\n</blockquote>\n<p>&ensp;&ensp;&ensp;&ensp;更多区别和细节就百度一下吧,不细说了.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"在NVMe硬盘上安装Ubuntu\"><a href=\"#在NVMe硬盘上安装Ubuntu\" class=\"headerlink\" title=\"在NVMe硬盘上安装Ubuntu\"></a>在NVMe硬盘上安装Ubuntu</h2><h3 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h3><p>&ensp;&ensp;&ensp;&ensp;今天在帮同事安装Ubuntu时遇到点困难,整理一下.同事的电脑是Dell inspire 5488,18年生产的.因为开发工具原因我们需要使用Ubuntu16.04(Kernel:4.15.0-29).因为是同事电脑,安装时没拍照,安装好后也不好再折腾一遍,就纯文字描述了.</p>\n<p>&ensp;&ensp;&ensp;&ensp;一开始采用UEFI的方式安装,启动后进入BIOS,发现了两个安装的U盘,随意选一个进入下一步,结果往下进行后提示如下:</p>\n<blockquote>\n<p>安装Ubuntu需要8.3G的控空间,而磁盘只有4G</p>\n</blockquote>\n<p>&ensp;&ensp;&ensp;&ensp;以为是启动时的U盘选差了, 重启再选另外一个,仍然是这个原因,重新给U盘烧写系统仍是上述现象.</p>\n<p>&ensp;&ensp;&ensp;&ensp;后来决定放弃使用UEFI模式启动,使用Legacy方式,虽然可以安装系统,但是启动后提示找不到启动的设备.没法发现电脑的硬盘.</p>\n<hr>\n<h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><p>&ensp;&ensp;&ensp;&ensp;发送上述现象是因为该电脑为固态硬盘,BIOS中硬盘模式开启了Rapid ON的模式,硬盘在Linux系统中不是传统的 /dev/sd* 这样的形式存在的,所以找不到硬盘.</p>\n<hr>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>&ensp;&ensp;&ensp;&ensp;将BIOS的启动参数进行如下设置:</p>\n<blockquote>\n<ol>\n<li>采用Legacy方式启动;</li>\n<li>将硬盘模式更改为ACHI;</li>\n<li>将UEFI Boot Security 更改为Off;</li>\n</ol>\n</blockquote>\n<p>&ensp;&ensp;&ensp;&ensp;然后重启进入BIOS界面,会有Legacy启动选项和UEFI启动选项,选择UEFI选项下的U盘作为启动介质,此时会提示在非UEFI模式下选择采用UEFI模式安装,同意该方式,继续下一步,直至安装结束.</p>\n<p>&ensp;&ensp;&ensp;&ensp;重启后进入到BIOS看一下,是否还存在Legacy这个启动选项,如果存在的话则将该方式关闭,并且将UEFI中的Security Boot 更改为Off即可正常使用.</p>\n<hr>\n<h3 id=\"关于UEFI和Leagacy\"><a href=\"#关于UEFI和Leagacy\" class=\"headerlink\" title=\"关于UEFI和Leagacy\"></a>关于UEFI和Leagacy</h3><blockquote>\n<p>UEFI技术较新,只支持64位操作系统,启动速度较快;</p>\n</blockquote>\n<blockquote>\n<p>Legacy是传统的启动模式,不能支持超过2T的硬盘;</p>\n</blockquote>\n<p>&ensp;&ensp;&ensp;&ensp;更多区别和细节就百度一下吧,不细说了.</p>\n"},{"title":"Ubuntu下Markdown编辑器的安装","date":"2016-09-28T00:02:19.000Z","author":"孙宏伟","summary":"markdown Ubuntu","_content":"\n\n## 下载\n\n&ensp; &ensp; 前往[remarkable](https://remarkableapp.github.io/linux/download.html)下载安装文件或([点此下载](https://remarkableapp.github.io/files/remarkable_1.87_all.deb))，Ubuntu系统选择*.deb格式:\n\n \n ![DownLoad Remarkable](download.png)\n\n--- \n \n## 安装\n\n&ensp; &ensp; 下载完成后，打开终端找到文件所在目录，执行如下命令进行安装，终端会输出一些报错信息，是由于安装缺少依赖导致的:\n\n\n``` bash\n$ sudo dpkg -i remarkable_1.87_all.deb\n```\n\n ![Install Remarkable](install.png)\n\n--- \n\n## 更新源\n\n{% asset_img aaa.jpg markdown %}\n\n&ensp; &ensp; 安装依赖前先更新一下源:\n\n``` bash\n$ sudo apt-get update\n```\n\n ![Update Source](update.png)\n\n--- \n \n\n## 安装依赖\n\n&ensp; &ensp; 补充安装依赖项：\n``` bash\n$  sudo apt-get install -f\n```\n \n ![Update Source](depend.png)\n\n--- \n \n## 运行\n\n&ensp; &ensp;在终端启动，即可使用Remarkable：\n``` bash\n$  remarkable\n```\n \n ![Update Source](remarkable.png)\n\n--- \n \n","source":"_posts/ubuntu-remarkable.md","raw":"---\ntitle:          Ubuntu下Markdown编辑器的安装\ndate:         2016-09-28 08:02:19\nauthor:     孙宏伟\nsummary:    markdown Ubuntu \ncategories: Ubuntu\ntags:\n - Ubuntu\n---\n\n\n## 下载\n\n&ensp; &ensp; 前往[remarkable](https://remarkableapp.github.io/linux/download.html)下载安装文件或([点此下载](https://remarkableapp.github.io/files/remarkable_1.87_all.deb))，Ubuntu系统选择*.deb格式:\n\n \n ![DownLoad Remarkable](download.png)\n\n--- \n \n## 安装\n\n&ensp; &ensp; 下载完成后，打开终端找到文件所在目录，执行如下命令进行安装，终端会输出一些报错信息，是由于安装缺少依赖导致的:\n\n\n``` bash\n$ sudo dpkg -i remarkable_1.87_all.deb\n```\n\n ![Install Remarkable](install.png)\n\n--- \n\n## 更新源\n\n{% asset_img aaa.jpg markdown %}\n\n&ensp; &ensp; 安装依赖前先更新一下源:\n\n``` bash\n$ sudo apt-get update\n```\n\n ![Update Source](update.png)\n\n--- \n \n\n## 安装依赖\n\n&ensp; &ensp; 补充安装依赖项：\n``` bash\n$  sudo apt-get install -f\n```\n \n ![Update Source](depend.png)\n\n--- \n \n## 运行\n\n&ensp; &ensp;在终端启动，即可使用Remarkable：\n``` bash\n$  remarkable\n```\n \n ![Update Source](remarkable.png)\n\n--- \n \n","slug":"ubuntu-remarkable","published":1,"updated":"2019-10-11T05:03:40.169Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2l8midn000d17alfdnvzmrw","content":"<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>&ensp; &ensp; 前往<a href=\"https://remarkableapp.github.io/linux/download.html\" target=\"_blank\" rel=\"noopener\">remarkable</a>下载安装文件或(<a href=\"https://remarkableapp.github.io/files/remarkable_1.87_all.deb\" target=\"_blank\" rel=\"noopener\">点此下载</a>)，Ubuntu系统选择*.deb格式:</p>\n<p> <img src=\"/2016/09/28/ubuntu-remarkable/download.png\" alt=\"DownLoad Remarkable\"></p>\n<hr>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>&ensp; &ensp; 下载完成后，打开终端找到文件所在目录，执行如下命令进行安装，终端会输出一些报错信息，是由于安装缺少依赖导致的:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo dpkg -i remarkable_1.87_all.deb</span><br></pre></td></tr></table></figure>\n\n<p> <img src=\"/2016/09/28/ubuntu-remarkable/install.png\" alt=\"Install Remarkable\"></p>\n<hr>\n<h2 id=\"更新源\"><a href=\"#更新源\" class=\"headerlink\" title=\"更新源\"></a>更新源</h2>\n\n<p>&ensp; &ensp; 安装依赖前先更新一下源:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<p> <img src=\"/2016/09/28/ubuntu-remarkable/update.png\" alt=\"Update Source\"></p>\n<hr>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><p>&ensp; &ensp; 补充安装依赖项：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  sudo apt-get install -f</span><br></pre></td></tr></table></figure>\n\n\n<p> <img src=\"/2016/09/28/ubuntu-remarkable/depend.png\" alt=\"Update Source\"></p>\n<hr>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>&ensp; &ensp;在终端启动，即可使用Remarkable：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  remarkable</span><br></pre></td></tr></table></figure>\n\n\n<p> <img src=\"/2016/09/28/ubuntu-remarkable/remarkable.png\" alt=\"Update Source\"></p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>&ensp; &ensp; 前往<a href=\"https://remarkableapp.github.io/linux/download.html\" target=\"_blank\" rel=\"noopener\">remarkable</a>下载安装文件或(<a href=\"https://remarkableapp.github.io/files/remarkable_1.87_all.deb\" target=\"_blank\" rel=\"noopener\">点此下载</a>)，Ubuntu系统选择*.deb格式:</p>\n<p> <img src=\"/2016/09/28/ubuntu-remarkable/download.png\" alt=\"DownLoad Remarkable\"></p>\n<hr>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>&ensp; &ensp; 下载完成后，打开终端找到文件所在目录，执行如下命令进行安装，终端会输出一些报错信息，是由于安装缺少依赖导致的:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo dpkg -i remarkable_1.87_all.deb</span><br></pre></td></tr></table></figure>\n\n<p> <img src=\"/2016/09/28/ubuntu-remarkable/install.png\" alt=\"Install Remarkable\"></p>\n<hr>\n<h2 id=\"更新源\"><a href=\"#更新源\" class=\"headerlink\" title=\"更新源\"></a>更新源</h2>\n\n<p>&ensp; &ensp; 安装依赖前先更新一下源:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<p> <img src=\"/2016/09/28/ubuntu-remarkable/update.png\" alt=\"Update Source\"></p>\n<hr>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><p>&ensp; &ensp; 补充安装依赖项：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  sudo apt-get install -f</span><br></pre></td></tr></table></figure>\n\n\n<p> <img src=\"/2016/09/28/ubuntu-remarkable/depend.png\" alt=\"Update Source\"></p>\n<hr>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>&ensp; &ensp;在终端启动，即可使用Remarkable：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  remarkable</span><br></pre></td></tr></table></figure>\n\n\n<p> <img src=\"/2016/09/28/ubuntu-remarkable/remarkable.png\" alt=\"Update Source\"></p>\n<hr>\n"},{"title":"结构体包含联合体与数组的复制","date":"2018-06-21T07:31:19.000Z","author":"孙宏伟","summary":"union and struct","_content":"\n## 位域结构体\n\n&ensp; &ensp; &ensp; &ensp; 有时候在通信时仅代表一个bool型的量，不需单独占用一个byte，通过定义**位域结构体**可以将若干个变量放到一个byte里，一个变量占用若干bits（小于8），这样就能节省很多空间，例如：\n\n```\ntypedef struct BITSTRUCT{\n    int A:2;\n    int B:5;\n    int C:1;\n}BitStruct;\n```\n&ensp; &ensp; &ensp; &ensp; 以**64位X86上的Ubuntu16.04**为例，这样一个BitStruct的结构体一共使用了一个Byte的空间，其中A占了低端的2bit，B占了中间的5bit，C占了最高的1bit：\n<table>\n    <tr>\n        <td>bit7</td> \n        <td>bit6</td> \n        <td>bit5</td> \n        <td>bit4</td> \n        <td>bit3</td> \n        <td>bit2</td> \n        <td>bit1</td> \n        <td>bit0</td>  \n   </tr>\n    <tr>\n        <td colspan=\"1\">C</td>\n        <td colspan=\"5\">B</td>    \n        <td colspan=\"2\">A</td>    \n    </tr>\n</table>\n\n---\n\n## 联合体\n\n &ensp; &ensp;&ensp; &ensp;  但也有一些情况比如一个长度的变量占用了4个byte，每次解析时都通过左移、右移也很麻烦，这样就可以通过**联合体**来包含一个结构体，在这个联合体中定义一个long int的长整型，然后同时再在这个联合体了放一个包含4个byte的结构体，这样就可以用来拼接字符串进行消息通信了：\n     \n```\ntypedef union UNIST{\n    long int nTotal;\n    struct{\n        char c1;\n        char c2;\n        char c3;\n        char c4;\n    }cSep;\n}UniSt;\n```\n---\n\n\n## 下面是一段代码供参考\n\n```\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#pragma pack(8)\n\ntypedef unsigned char       BYTE;\ntypedef unsigned short int  WORD;\ntypedef unsigned long  int  DWORD;\n\ntypedef union {\n    DWORD head;\n    struct {\n        DWORD a:6;\n        DWORD b:6;\n        DWORD c:6;\n        DWORD d:6;\n        DWORD e:6;\n        DWORD f:2;\n    }headst;\n}uHead;\ntypedef union {\n    WORD end;\n    struct {\n        WORD a:5;\n        WORD b:2;\n        WORD c:7;\n        WORD d:2;\n    }endst;\n}endst;\n\ntypedef struct {\n    uHead head;\n    BYTE  len;\n    BYTE  end;\n}First;\n\n\nint main()\n{\n    int n;\n    BYTE   orig[8];\n    First mf;\n    mf.head.headst.a=33;\n    mf.head.headst.b=36;\n    mf.head.headst.c=39;\n    mf.head.headst.d=49;\n    mf.head.headst.e=55;\n    mf.head.headst.f=2;\n    mf.len=18;\n    mf.end=22;\n    memcpy(&orig,&mf,8);\n    for(n=0;n<8;n++)\n        printf(\"%d-\",orig[n]);\n    printf(\"\\n\");\n    printf(\"head=0x%x,int:%lu\\n\",mf.head.head,mf.head.head);\n   return 0;\n}\n```\n\n\n***输出如下***\n> 33-121-198-183-18-22-92-183-\n\n> head=0xb7c67921,int:3083237665\n\n\n","source":"_posts/union-struct.md","raw":"---\ntitle:      结构体包含联合体与数组的复制\ndate:       2018-06-21 15:31:19\nauthor:     孙宏伟\nsummary:    union and struct\ncategories: C/C++\ntags:\n - DataStruct\n---\n\n## 位域结构体\n\n&ensp; &ensp; &ensp; &ensp; 有时候在通信时仅代表一个bool型的量，不需单独占用一个byte，通过定义**位域结构体**可以将若干个变量放到一个byte里，一个变量占用若干bits（小于8），这样就能节省很多空间，例如：\n\n```\ntypedef struct BITSTRUCT{\n    int A:2;\n    int B:5;\n    int C:1;\n}BitStruct;\n```\n&ensp; &ensp; &ensp; &ensp; 以**64位X86上的Ubuntu16.04**为例，这样一个BitStruct的结构体一共使用了一个Byte的空间，其中A占了低端的2bit，B占了中间的5bit，C占了最高的1bit：\n<table>\n    <tr>\n        <td>bit7</td> \n        <td>bit6</td> \n        <td>bit5</td> \n        <td>bit4</td> \n        <td>bit3</td> \n        <td>bit2</td> \n        <td>bit1</td> \n        <td>bit0</td>  \n   </tr>\n    <tr>\n        <td colspan=\"1\">C</td>\n        <td colspan=\"5\">B</td>    \n        <td colspan=\"2\">A</td>    \n    </tr>\n</table>\n\n---\n\n## 联合体\n\n &ensp; &ensp;&ensp; &ensp;  但也有一些情况比如一个长度的变量占用了4个byte，每次解析时都通过左移、右移也很麻烦，这样就可以通过**联合体**来包含一个结构体，在这个联合体中定义一个long int的长整型，然后同时再在这个联合体了放一个包含4个byte的结构体，这样就可以用来拼接字符串进行消息通信了：\n     \n```\ntypedef union UNIST{\n    long int nTotal;\n    struct{\n        char c1;\n        char c2;\n        char c3;\n        char c4;\n    }cSep;\n}UniSt;\n```\n---\n\n\n## 下面是一段代码供参考\n\n```\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#pragma pack(8)\n\ntypedef unsigned char       BYTE;\ntypedef unsigned short int  WORD;\ntypedef unsigned long  int  DWORD;\n\ntypedef union {\n    DWORD head;\n    struct {\n        DWORD a:6;\n        DWORD b:6;\n        DWORD c:6;\n        DWORD d:6;\n        DWORD e:6;\n        DWORD f:2;\n    }headst;\n}uHead;\ntypedef union {\n    WORD end;\n    struct {\n        WORD a:5;\n        WORD b:2;\n        WORD c:7;\n        WORD d:2;\n    }endst;\n}endst;\n\ntypedef struct {\n    uHead head;\n    BYTE  len;\n    BYTE  end;\n}First;\n\n\nint main()\n{\n    int n;\n    BYTE   orig[8];\n    First mf;\n    mf.head.headst.a=33;\n    mf.head.headst.b=36;\n    mf.head.headst.c=39;\n    mf.head.headst.d=49;\n    mf.head.headst.e=55;\n    mf.head.headst.f=2;\n    mf.len=18;\n    mf.end=22;\n    memcpy(&orig,&mf,8);\n    for(n=0;n<8;n++)\n        printf(\"%d-\",orig[n]);\n    printf(\"\\n\");\n    printf(\"head=0x%x,int:%lu\\n\",mf.head.head,mf.head.head);\n   return 0;\n}\n```\n\n\n***输出如下***\n> 33-121-198-183-18-22-92-183-\n\n> head=0xb7c67921,int:3083237665\n\n\n","slug":"union-struct","published":1,"updated":"2019-10-11T05:07:05.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2l8midp000e17al0uw78rve","content":"<h2 id=\"位域结构体\"><a href=\"#位域结构体\" class=\"headerlink\" title=\"位域结构体\"></a>位域结构体</h2><p>&ensp; &ensp; &ensp; &ensp; 有时候在通信时仅代表一个bool型的量，不需单独占用一个byte，通过定义<strong>位域结构体</strong>可以将若干个变量放到一个byte里，一个变量占用若干bits（小于8），这样就能节省很多空间，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef struct BITSTRUCT&#123;</span><br><span class=\"line\">    int A:2;</span><br><span class=\"line\">    int B:5;</span><br><span class=\"line\">    int C:1;</span><br><span class=\"line\">&#125;BitStruct;</span><br></pre></td></tr></table></figure>\n\n<p>&ensp; &ensp; &ensp; &ensp; 以<strong>64位X86上的Ubuntu16.04</strong>为例，这样一个BitStruct的结构体一共使用了一个Byte的空间，其中A占了低端的2bit，B占了中间的5bit，C占了最高的1bit：</p>\n<table>\n    <tr>\n        <td>bit7</td> \n        <td>bit6</td> \n        <td>bit5</td> \n        <td>bit4</td> \n        <td>bit3</td> \n        <td>bit2</td> \n        <td>bit1</td> \n        <td>bit0</td>  \n   </tr>\n    <tr>\n        <td colspan=\"1\">C</td>\n        <td colspan=\"5\">B</td>    \n        <td colspan=\"2\">A</td>    \n    </tr>\n</table>\n\n<hr>\n<h2 id=\"联合体\"><a href=\"#联合体\" class=\"headerlink\" title=\"联合体\"></a>联合体</h2><p> &ensp; &ensp;&ensp; &ensp;  但也有一些情况比如一个长度的变量占用了4个byte，每次解析时都通过左移、右移也很麻烦，这样就可以通过<strong>联合体</strong>来包含一个结构体，在这个联合体中定义一个long int的长整型，然后同时再在这个联合体了放一个包含4个byte的结构体，这样就可以用来拼接字符串进行消息通信了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef union UNIST&#123;</span><br><span class=\"line\">    long int nTotal;</span><br><span class=\"line\">    struct&#123;</span><br><span class=\"line\">        char c1;</span><br><span class=\"line\">        char c2;</span><br><span class=\"line\">        char c3;</span><br><span class=\"line\">        char c4;</span><br><span class=\"line\">    &#125;cSep;</span><br><span class=\"line\">&#125;UniSt;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"下面是一段代码供参考\"><a href=\"#下面是一段代码供参考\" class=\"headerlink\" title=\"下面是一段代码供参考\"></a>下面是一段代码供参考</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma pack(8)</span><br><span class=\"line\"></span><br><span class=\"line\">typedef unsigned char       BYTE;</span><br><span class=\"line\">typedef unsigned short int  WORD;</span><br><span class=\"line\">typedef unsigned long  int  DWORD;</span><br><span class=\"line\"></span><br><span class=\"line\">typedef union &#123;</span><br><span class=\"line\">    DWORD head;</span><br><span class=\"line\">    struct &#123;</span><br><span class=\"line\">        DWORD a:6;</span><br><span class=\"line\">        DWORD b:6;</span><br><span class=\"line\">        DWORD c:6;</span><br><span class=\"line\">        DWORD d:6;</span><br><span class=\"line\">        DWORD e:6;</span><br><span class=\"line\">        DWORD f:2;</span><br><span class=\"line\">    &#125;headst;</span><br><span class=\"line\">&#125;uHead;</span><br><span class=\"line\">typedef union &#123;</span><br><span class=\"line\">    WORD end;</span><br><span class=\"line\">    struct &#123;</span><br><span class=\"line\">        WORD a:5;</span><br><span class=\"line\">        WORD b:2;</span><br><span class=\"line\">        WORD c:7;</span><br><span class=\"line\">        WORD d:2;</span><br><span class=\"line\">    &#125;endst;</span><br><span class=\"line\">&#125;endst;</span><br><span class=\"line\"></span><br><span class=\"line\">typedef struct &#123;</span><br><span class=\"line\">    uHead head;</span><br><span class=\"line\">    BYTE  len;</span><br><span class=\"line\">    BYTE  end;</span><br><span class=\"line\">&#125;First;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int n;</span><br><span class=\"line\">    BYTE   orig[8];</span><br><span class=\"line\">    First mf;</span><br><span class=\"line\">    mf.head.headst.a=33;</span><br><span class=\"line\">    mf.head.headst.b=36;</span><br><span class=\"line\">    mf.head.headst.c=39;</span><br><span class=\"line\">    mf.head.headst.d=49;</span><br><span class=\"line\">    mf.head.headst.e=55;</span><br><span class=\"line\">    mf.head.headst.f=2;</span><br><span class=\"line\">    mf.len=18;</span><br><span class=\"line\">    mf.end=22;</span><br><span class=\"line\">    memcpy(&amp;orig,&amp;mf,8);</span><br><span class=\"line\">    for(n=0;n&lt;8;n++)</span><br><span class=\"line\">        printf(&quot;%d-&quot;,orig[n]);</span><br><span class=\"line\">    printf(&quot;\\n&quot;);</span><br><span class=\"line\">    printf(&quot;head=0x%x,int:%lu\\n&quot;,mf.head.head,mf.head.head);</span><br><span class=\"line\">   return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong><em>输出如下</em></strong></p>\n<blockquote>\n<p>33-121-198-183-18-22-92-183-</p>\n</blockquote>\n<blockquote>\n<p>head=0xb7c67921,int:3083237665</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"位域结构体\"><a href=\"#位域结构体\" class=\"headerlink\" title=\"位域结构体\"></a>位域结构体</h2><p>&ensp; &ensp; &ensp; &ensp; 有时候在通信时仅代表一个bool型的量，不需单独占用一个byte，通过定义<strong>位域结构体</strong>可以将若干个变量放到一个byte里，一个变量占用若干bits（小于8），这样就能节省很多空间，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef struct BITSTRUCT&#123;</span><br><span class=\"line\">    int A:2;</span><br><span class=\"line\">    int B:5;</span><br><span class=\"line\">    int C:1;</span><br><span class=\"line\">&#125;BitStruct;</span><br></pre></td></tr></table></figure>\n\n<p>&ensp; &ensp; &ensp; &ensp; 以<strong>64位X86上的Ubuntu16.04</strong>为例，这样一个BitStruct的结构体一共使用了一个Byte的空间，其中A占了低端的2bit，B占了中间的5bit，C占了最高的1bit：</p>\n<table>\n    <tr>\n        <td>bit7</td> \n        <td>bit6</td> \n        <td>bit5</td> \n        <td>bit4</td> \n        <td>bit3</td> \n        <td>bit2</td> \n        <td>bit1</td> \n        <td>bit0</td>  \n   </tr>\n    <tr>\n        <td colspan=\"1\">C</td>\n        <td colspan=\"5\">B</td>    \n        <td colspan=\"2\">A</td>    \n    </tr>\n</table>\n\n<hr>\n<h2 id=\"联合体\"><a href=\"#联合体\" class=\"headerlink\" title=\"联合体\"></a>联合体</h2><p> &ensp; &ensp;&ensp; &ensp;  但也有一些情况比如一个长度的变量占用了4个byte，每次解析时都通过左移、右移也很麻烦，这样就可以通过<strong>联合体</strong>来包含一个结构体，在这个联合体中定义一个long int的长整型，然后同时再在这个联合体了放一个包含4个byte的结构体，这样就可以用来拼接字符串进行消息通信了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef union UNIST&#123;</span><br><span class=\"line\">    long int nTotal;</span><br><span class=\"line\">    struct&#123;</span><br><span class=\"line\">        char c1;</span><br><span class=\"line\">        char c2;</span><br><span class=\"line\">        char c3;</span><br><span class=\"line\">        char c4;</span><br><span class=\"line\">    &#125;cSep;</span><br><span class=\"line\">&#125;UniSt;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"下面是一段代码供参考\"><a href=\"#下面是一段代码供参考\" class=\"headerlink\" title=\"下面是一段代码供参考\"></a>下面是一段代码供参考</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma pack(8)</span><br><span class=\"line\"></span><br><span class=\"line\">typedef unsigned char       BYTE;</span><br><span class=\"line\">typedef unsigned short int  WORD;</span><br><span class=\"line\">typedef unsigned long  int  DWORD;</span><br><span class=\"line\"></span><br><span class=\"line\">typedef union &#123;</span><br><span class=\"line\">    DWORD head;</span><br><span class=\"line\">    struct &#123;</span><br><span class=\"line\">        DWORD a:6;</span><br><span class=\"line\">        DWORD b:6;</span><br><span class=\"line\">        DWORD c:6;</span><br><span class=\"line\">        DWORD d:6;</span><br><span class=\"line\">        DWORD e:6;</span><br><span class=\"line\">        DWORD f:2;</span><br><span class=\"line\">    &#125;headst;</span><br><span class=\"line\">&#125;uHead;</span><br><span class=\"line\">typedef union &#123;</span><br><span class=\"line\">    WORD end;</span><br><span class=\"line\">    struct &#123;</span><br><span class=\"line\">        WORD a:5;</span><br><span class=\"line\">        WORD b:2;</span><br><span class=\"line\">        WORD c:7;</span><br><span class=\"line\">        WORD d:2;</span><br><span class=\"line\">    &#125;endst;</span><br><span class=\"line\">&#125;endst;</span><br><span class=\"line\"></span><br><span class=\"line\">typedef struct &#123;</span><br><span class=\"line\">    uHead head;</span><br><span class=\"line\">    BYTE  len;</span><br><span class=\"line\">    BYTE  end;</span><br><span class=\"line\">&#125;First;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int n;</span><br><span class=\"line\">    BYTE   orig[8];</span><br><span class=\"line\">    First mf;</span><br><span class=\"line\">    mf.head.headst.a=33;</span><br><span class=\"line\">    mf.head.headst.b=36;</span><br><span class=\"line\">    mf.head.headst.c=39;</span><br><span class=\"line\">    mf.head.headst.d=49;</span><br><span class=\"line\">    mf.head.headst.e=55;</span><br><span class=\"line\">    mf.head.headst.f=2;</span><br><span class=\"line\">    mf.len=18;</span><br><span class=\"line\">    mf.end=22;</span><br><span class=\"line\">    memcpy(&amp;orig,&amp;mf,8);</span><br><span class=\"line\">    for(n=0;n&lt;8;n++)</span><br><span class=\"line\">        printf(&quot;%d-&quot;,orig[n]);</span><br><span class=\"line\">    printf(&quot;\\n&quot;);</span><br><span class=\"line\">    printf(&quot;head=0x%x,int:%lu\\n&quot;,mf.head.head,mf.head.head);</span><br><span class=\"line\">   return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong><em>输出如下</em></strong></p>\n<blockquote>\n<p>33-121-198-183-18-22-92-183-</p>\n</blockquote>\n<blockquote>\n<p>head=0xb7c67921,int:3083237665</p>\n</blockquote>\n"}],"PostAsset":[{"_id":"source/_posts/Linux-kernel-compile/downlink.png","slug":"downlink.png","post":"ck2l8mid4000217alq7b7ka4t","modified":1,"renderable":0},{"_id":"source/_posts/Ubuntu-Install/CreateVirtualBox.png","slug":"CreateVirtualBox.png","post":"ck2l8mid9000617alg1ki6k6k","modified":1,"renderable":0},{"_id":"source/_posts/Ubuntu-Install/InstallAddition.png","slug":"InstallAddition.png","post":"ck2l8mid9000617alg1ki6k6k","modified":1,"renderable":0},{"_id":"source/_posts/Ubuntu-Install/SettingSystem.png","slug":"SettingSystem.png","post":"ck2l8mid9000617alg1ki6k6k","modified":1,"renderable":0},{"_id":"source/_posts/Ubuntu-Install/StartInstall.png","slug":"StartInstall.png","post":"ck2l8mid9000617alg1ki6k6k","modified":1,"renderable":0},{"_id":"source/_posts/Ubuntu-Install/TimeZone.png","slug":"TimeZone.png","post":"ck2l8mid9000617alg1ki6k6k","modified":1,"renderable":0},{"_id":"source/_posts/Ubuntu-Install/downloadVirtual.png","slug":"downloadVirtual.png","post":"ck2l8mid9000617alg1ki6k6k","modified":1,"renderable":0},{"_id":"source/_posts/Ubuntu-Install/Installing.png","slug":"Installing.png","post":"ck2l8mid9000617alg1ki6k6k","modified":1,"renderable":0},{"_id":"source/_posts/Ubuntu-Install/RunAddition.png","slug":"RunAddition.png","post":"ck2l8mid9000617alg1ki6k6k","modified":1,"renderable":0},{"_id":"source/_posts/ubuntu-remarkable/remarkable.png","slug":"remarkable.png","post":"ck2l8midn000d17alfdnvzmrw","modified":1,"renderable":0},{"_id":"source/_posts/Ubuntu-Install/AdditionComplete.png","slug":"AdditionComplete.png","post":"ck2l8mid9000617alg1ki6k6k","modified":1,"renderable":0},{"_id":"source/_posts/Ubuntu-Install/InstallComplete.png","slug":"InstallComplete.png","post":"ck2l8mid9000617alg1ki6k6k","modified":1,"renderable":0},{"_id":"source/_posts/Linux-Kernel-Config/editgrub.png","post":"ck2l8micx000017alaray8p8c","slug":"editgrub.png","modified":1,"renderable":1},{"_id":"source/_posts/Linux-Kernel-Config/grepKernel.png","post":"ck2l8micx000017alaray8p8c","slug":"grepKernel.png","modified":1,"renderable":1},{"_id":"source/_posts/Linux-Kernel-Config/menuentry.png","post":"ck2l8micx000017alaray8p8c","slug":"menuentry.png","modified":1,"renderable":1},{"_id":"source/_posts/Linux-Kernel-Config/uname.png","post":"ck2l8micx000017alaray8p8c","slug":"uname.png","modified":1,"renderable":1},{"_id":"source/_posts/mac-androidstudio/androidstudio.png","slug":"androidstudio.png","post":"ck2l8midb000817alj1o6a4qa","modified":1,"renderable":0},{"_id":"source/_posts/mac-androidstudio/download.png","slug":"download.png","post":"ck2l8midb000817alj1o6a4qa","modified":1,"renderable":0},{"_id":"source/_posts/mac-androidstudio/gradlefile.png","slug":"gradlefile.png","post":"ck2l8midb000817alj1o6a4qa","modified":1,"renderable":0},{"_id":"source/_posts/mac-androidstudio/gradlepath.png","slug":"gradlepath.png","post":"ck2l8midb000817alj1o6a4qa","modified":1,"renderable":0},{"_id":"source/_posts/mac-androidstudio/install.png","slug":"install.png","post":"ck2l8midb000817alj1o6a4qa","modified":1,"renderable":0},{"_id":"source/_posts/ubuntu-remarkable/depend.png","post":"ck2l8midn000d17alfdnvzmrw","slug":"depend.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-remarkable/download.png","post":"ck2l8midn000d17alfdnvzmrw","slug":"download.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-remarkable/install.png","post":"ck2l8midn000d17alfdnvzmrw","slug":"install.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-remarkable/update.png","post":"ck2l8midn000d17alfdnvzmrw","slug":"update.png","modified":1,"renderable":1},{"_id":"source/_posts/Linux-kernel-compile/boot.png","post":"ck2l8mid4000217alq7b7ka4t","slug":"boot.png","modified":1,"renderable":1},{"_id":"source/_posts/Linux-kernel-compile/grub.png","post":"ck2l8mid4000217alq7b7ka4t","slug":"grub.png","modified":1,"renderable":1},{"_id":"source/_posts/Linux-kernel-compile/kernelversion.png","post":"ck2l8mid4000217alq7b7ka4t","slug":"kernelversion.png","modified":1,"renderable":1},{"_id":"source/_posts/Linux-kernel-compile/libmodules.png","post":"ck2l8mid4000217alq7b7ka4t","slug":"libmodules.png","modified":1,"renderable":1},{"_id":"source/_posts/Linux-kernel-compile/menuconfig.png","post":"ck2l8mid4000217alq7b7ka4t","slug":"menuconfig.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/IgnoreUpdate.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"IgnoreUpdate.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/ContinueInstall.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"ContinueInstall.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/EraseContine.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"EraseContine.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/EraseInstall.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"EraseInstall.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/InstallUbuntu.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"InstallUbuntu.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/KeyBoard.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"KeyBoard.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/NameStorage.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"NameStorage.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/NameSystem.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"NameSystem.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/PersonConfig.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"PersonConfig.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/RestartSystem.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"RestartSystem.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/SetRam.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"SetRam.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/SetRom.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"SetRom.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/SetRomType.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"SetRomType.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/SetStorage.png","post":"ck2l8mid9000617alg1ki6k6k","slug":"SetStorage.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu-Install/SettingDetails.png","slug":"SettingDetails.png","post":"ck2l8mid9000617alg1ki6k6k","modified":1,"renderable":0}],"PostCategory":[{"post_id":"ck2l8micx000017alaray8p8c","category_id":"ck2l8mid7000417al1llre1bh","_id":"ck2l8midq000g17aluncj0uzw"},{"post_id":"ck2l8mid4000217alq7b7ka4t","category_id":"ck2l8mid7000417al1llre1bh","_id":"ck2l8midt000j17al1boxqkb2"},{"post_id":"ck2l8mid9000617alg1ki6k6k","category_id":"ck2l8midp000f17alto6o3syp","_id":"ck2l8mie1000n17alj6auwi28"},{"post_id":"ck2l8midb000817alj1o6a4qa","category_id":"ck2l8midt000k17al1ikmkit4","_id":"ck2l8mie2000r17al7ohiaa0w"},{"post_id":"ck2l8midj000917alaloa36fh","category_id":"ck2l8midp000f17alto6o3syp","_id":"ck2l8mie3000v17alv2izkp5b"},{"post_id":"ck2l8midn000d17alfdnvzmrw","category_id":"ck2l8midp000f17alto6o3syp","_id":"ck2l8mie4000z17alhmyic1u9"},{"post_id":"ck2l8midp000e17al0uw78rve","category_id":"ck2l8mie3000u17alow7yluzx","_id":"ck2l8mie5001217alvriml0tp"}],"PostTag":[{"post_id":"ck2l8micx000017alaray8p8c","tag_id":"ck2l8mid8000517aljri4ln7h","_id":"ck2l8midm000c17al6p4b6p2r"},{"post_id":"ck2l8mid4000217alq7b7ka4t","tag_id":"ck2l8mid8000517aljri4ln7h","_id":"ck2l8midr000i17alvq57jmnq"},{"post_id":"ck2l8mid9000617alg1ki6k6k","tag_id":"ck2l8midq000h17alef7nybxl","_id":"ck2l8midv000m17al3xo21ntr"},{"post_id":"ck2l8midb000817alj1o6a4qa","tag_id":"ck2l8midu000l17alc10inud7","_id":"ck2l8mie3000t17aldvdn4eu1"},{"post_id":"ck2l8midb000817alj1o6a4qa","tag_id":"ck2l8mie1000p17al0txymz4r","_id":"ck2l8mie3000w17al0b8m5p67"},{"post_id":"ck2l8midj000917alaloa36fh","tag_id":"ck2l8midq000h17alef7nybxl","_id":"ck2l8mie4000y17al4f0dmerd"},{"post_id":"ck2l8midn000d17alfdnvzmrw","tag_id":"ck2l8midq000h17alef7nybxl","_id":"ck2l8mie4001117alp5ksipgo"},{"post_id":"ck2l8midp000e17al0uw78rve","tag_id":"ck2l8mie4001017alfom5b028","_id":"ck2l8mie5001317alsxlbvmy3"}],"Tag":[{"name":"Linux","_id":"ck2l8mid8000517aljri4ln7h"},{"name":"Ubuntu","_id":"ck2l8midq000h17alef7nybxl"},{"name":"OSX","_id":"ck2l8midu000l17alc10inud7"},{"name":"Android Studio","_id":"ck2l8mie1000p17al0txymz4r"},{"name":"DataStruct","_id":"ck2l8mie4001017alfom5b028"}]}}